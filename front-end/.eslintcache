[{"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\index.js":"1","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\PrivateRoute\\PrivateRoute.js":"2","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\PrivateRoute\\AuthRoutes.js":"3","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\layouts\\Admin.js":"4","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\layouts\\Auth.js":"5","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\routes.js":"6","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Navbars\\AdminNavbar.js":"7","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Navbars\\AuthNavbar.js":"8","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Footers\\AdminFooter.js":"9","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Sidebar\\Sidebar.js":"10","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Footers\\AuthFooter.js":"11","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ConfirmEmail.js":"12","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ConfirmPassword.js":"13","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ResetPassword.js":"14","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\EditProfile.js":"15","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\UsersTable.js":"16","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ResetPasswordSuccess.js":"17","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\network\\ApiAxios.js":"18","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\Index.js":"19","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Tables.js":"20","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Maps.js":"21","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Register.js":"22","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Profile.js":"23","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Icons.js":"24","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Login.js":"25","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\NouveauClient.js":"26","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Clients.js":"27","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\config.js":"28","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\Header.js":"29","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\EditHeader.js":"30","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\UserHeader.js":"31","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\variables\\charts.js":"32","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Corbeille.js":"33","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ClientStatusPage.js":"34"},{"size":831,"mtime":1721215721062,"results":"35","hashOfConfig":"36"},{"size":378,"mtime":1720336952008,"results":"37","hashOfConfig":"36"},{"size":378,"mtime":1720336956029,"results":"38","hashOfConfig":"36"},{"size":1909,"mtime":1720441440318,"results":"39","hashOfConfig":"36"},{"size":2488,"mtime":1720336934490,"results":"40","hashOfConfig":"36"},{"size":3768,"mtime":1721726874008,"results":"41","hashOfConfig":"36"},{"size":6282,"mtime":1720510609728,"results":"42","hashOfConfig":"36"},{"size":3197,"mtime":1721208569107,"results":"43","hashOfConfig":"36"},{"size":2016,"mtime":1721304258988,"results":"44","hashOfConfig":"36"},{"size":13345,"mtime":1721298830459,"results":"45","hashOfConfig":"36"},{"size":2865,"mtime":1721304215853,"results":"46","hashOfConfig":"36"},{"size":1449,"mtime":1719997006702,"results":"47","hashOfConfig":"36"},{"size":3740,"mtime":1719996623467,"results":"48","hashOfConfig":"36"},{"size":4433,"mtime":1720001798596,"results":"49","hashOfConfig":"36"},{"size":5702,"mtime":1720001739481,"results":"50","hashOfConfig":"36"},{"size":2062,"mtime":1719904204308,"results":"51","hashOfConfig":"36"},{"size":913,"mtime":1719997026840,"results":"52","hashOfConfig":"36"},{"size":1693,"mtime":1720510040073,"results":"53","hashOfConfig":"36"},{"size":11788,"mtime":1720001424857,"results":"54","hashOfConfig":"36"},{"size":6490,"mtime":1721726818299,"results":"55","hashOfConfig":"36"},{"size":2839,"mtime":1720001760891,"results":"56","hashOfConfig":"36"},{"size":10657,"mtime":1720506877882,"results":"57","hashOfConfig":"36"},{"size":18967,"mtime":1720336918294,"results":"58","hashOfConfig":"36"},{"size":121150,"mtime":1720001750032,"results":"59","hashOfConfig":"36"},{"size":6868,"mtime":1721730904225,"results":"60","hashOfConfig":"36"},{"size":14574,"mtime":1721644377455,"results":"61","hashOfConfig":"36"},{"size":17519,"mtime":1721723501638,"results":"62","hashOfConfig":"36"},{"size":147,"mtime":1719858732158,"results":"63","hashOfConfig":"36"},{"size":5921,"mtime":1721588337180,"results":"64","hashOfConfig":"36"},{"size":1843,"mtime":1720336908717,"results":"65","hashOfConfig":"36"},{"size":1826,"mtime":1720336897673,"results":"66","hashOfConfig":"36"},{"size":10033,"mtime":1720001699377,"results":"67","hashOfConfig":"36"},{"size":9871,"mtime":1721645870512,"results":"68","hashOfConfig":"36"},{"size":5136,"mtime":1721727439912,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1rh0a52",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\index.js",[],["144","145"],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\PrivateRoute\\AuthRoutes.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\layouts\\Admin.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\layouts\\Auth.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\routes.js",["146","147","148","149"],"import Index from \"views/Index.js\";\nimport Profile from \"views/examples/Profile.js\";\nimport Maps from \"views/examples/Maps.js\";\nimport Register from \"views/examples/Register.js\";\nimport Login from \"views/examples/Login.js\";\nimport Tables from \"views/examples/Tables.js\";\nimport Icons from \"views/examples/Icons.js\";\nimport ConfirmEmail from \"./views/examples/ConfirmEmail\";\nimport EditProfile from \"./views/examples/EditProfile\";\nimport UsersTable from \"./views/examples/UsersTable\";\nimport ResetPassword from \"./views/examples/ResetPassword\";\nimport ConfirmPassword from \"./views/examples/ConfirmPassword\";\nimport ResetPasswordSuccess from \"./views/examples/ResetPasswordSuccess\";\nimport Clients from \"views/examples/Clients\";\nimport NouveauClient from \"views/examples/NouveauClient\";\nimport Corbeille from \"views/examples/Corbeille\";\nimport ClientStatusPage from \"views/examples/ClientStatusPage\";\n\nvar routes = [\n  {\n    path: \"/index\",\n    name: \"Dashboard\",\n    icon: \"ni ni-tv-2 text-primary\",\n    component: Index,\n    layout: \"/admin\",\n    api: false\n  },\n  {\n    path: \"/icons\",\n    name: \"Icons\",\n    icon: \"ni ni-planet text-blue\",\n    component: Icons,\n    layout: \"/admin\",\n    api: false\n  },\n  {\n    path: \"/maps\",\n    name: \"Maps\",\n    icon: \"ni ni-pin-3 text-orange\",\n    component: Maps,\n    layout: \"/admin\",\n    api: false\n  },\n  {\n    path: \"/user-profile\",\n    name: \"Profil Utilisateur\",\n    icon: \"ni ni-circle-08 text-yellow\",\n    component: Profile,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/tables\",\n    name: \"Tables\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: Tables,\n    layout: \"/admin\",\n    api: false\n  },\n  {\n    path: \"/statutClient/:status\",\n    name: \"ClientStatusPage\",\n    icon: \"ni ni-bullet-list-67 text-red\",\n    component: ClientStatusPage,\n    layout: \"/admin\",\n    api: false\n  },\n  {\n    path: \"/clients\",\n    name: \"Clients \",\n    icon: \"ni ni-single-02\",\n    component: Clients,\n    layout: \"/admin\",\n    api: false,\n  },     \n      {\n        path: \"/corbeille\",\n        name: \"Corbeille\",\n        icon: \"ni ni-folder-17 text-red\",\n        component: Corbeille,\n        layout: \"/admin\",\n        api: false,\n      },\n  {\n    path: \"/nouveauClient\",\n    name: \"Nouveau Client\",\n    icon: \"ni ni-fat-add\", // ou supprimez complètement l'icône\n    component: NouveauClient,\n    layout: \"/admin\",\n    api: false,\n    hidden: true // Ajouté pour cacher cette route dans le menu\n  },\n  {\n    path: \"/login\",\n    name: \"Connexion\",\n    icon: \"ni ni-key-25 text-info\",\n    component: Login,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/register\",\n    name: \"Inscription\",\n    icon: \"ni ni-circle-08 text-pink\",\n    component: Register,\n    layout: \"/auth\",\n    api: true\n  },\n  {\n    path: \"/edit-profile\",\n    name: \"Modifier Profil\",\n    icon: \"ni ni-ruler-pencil text-info\",\n    component: EditProfile,\n    layout: \"/admin\",\n    api: true\n  },\n  {\n    path: \"/users\",\n    name: \"Utilisateurs\",\n    icon: \"ni ni-folder-17 text-pink\",\n    component: UsersTable,\n    layout: \"/admin\",\n    api: true\n  },\n  // {\n  //   path: \"/reset-password\",\n  //   name: \"Réinitialiser le mot de passe\",\n  //   icon: \"ni ni-folder-17 text-pink\",\n  //   component: ResetPassword,\n  //   layout: \"/auth\",\n  //   api: true\n  // },\n  // {\n  //   path: \"/confirm-password/:id\",\n  //   name: \"Confirmer le mot de passe\",\n  //   icon: \"ni ni-folder-17 text-pink\",\n  //   component: ConfirmPassword,\n  //   layout: \"/auth\",\n  //   api: true\n  // },\n  // {\n  //   path: \"/reset-success\",\n  //   name: \"Réinitialisation du mot de passe confirmée\",\n  //   icon: \"ni ni-folder-17 text-pink\",\n  //   component: ResetPasswordSuccess,\n  //   layout: \"/auth\",\n  //   api: false\n  // }\n];\nexport default routes;\n","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Navbars\\AdminNavbar.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Navbars\\AuthNavbar.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Footers\\AdminFooter.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Footers\\AuthFooter.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ConfirmEmail.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ConfirmPassword.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ResetPassword.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\EditProfile.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\UsersTable.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ResetPasswordSuccess.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\network\\ApiAxios.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\Index.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Tables.js",["150","151","152","153","154","155"],"import React from \"react\";\n\n// reactstrap components\nimport {\n  Badge,\n  Card,\n  CardHeader,\n  CardFooter,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledDropdown,\n  DropdownToggle,\n  Media,\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  Progress,\n  Table,\n  Container,\n  Row,\n  UncontrolledTooltip\n} from \"reactstrap\";\n// core components\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"components/Headers/Header.js\";\nimport bootstrapImg from '../../assets/img/theme/bootstrap.jpg';\nimport angularImg from '../../assets/img/theme/angular.jpg';\nimport team1Img from '../../assets/img/theme/team-1-800x800.jpg'; // Et ainsi de suite pour les autres images\n\n\nconst Tables = () => {\n  const history = useHistory();\n\n  const handleRowClick = (status) => {\n    history.push(`/admin/statutClient/${status}`);\n  };\n  const rows = [\n    { \n      status: 'Appareillé', \n      budget: '$2,500 USD', \n      completion: '60%', \n      projectImg: 'theme/bootstrap.jpg', // Assurez-vous que ce chemin est correct\n      usersImg: ['team-1-800x800.jpg', 'team-2-800x800.jpg', 'team-3-800x800.jpg', 'team-4-800x800.jpg'] // Ceux-ci doivent également être définis\n    },\n    { \n      status: 'Période d\\'essai', \n      budget: '$1,800 USD', \n      completion: '100%', \n      projectImg: 'theme/angular.jpg', \n      usersImg: ['team-1-800x800.jpg', 'team-2-800x800.jpg', 'team-3-800x800.jpg', 'team-4-800x800.jpg']\n    },\n    // Continuez à ajouter des lignes selon le même modèle\n  ];\n  \n\n  return (\n    <>\n      <Header />\n      <Container className=\"mt--7\" fluid>\n        <Row>\n          <div className=\"col\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <h3 className=\"mb-0\">Card tables</h3>\n              </CardHeader>\n              <Table className=\"align-items-center table-flush\" responsive>\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Budget</th>\n                    <th scope=\"col\">Completion</th>\n                    <th scope=\"col\">Users</th>\n                    <th scope=\"col\" />\n                  </tr>\n                </thead>\n                <tbody>\n                  {rows.map((row, index) => (\n                    <tr key={index} onClick={() => handleRowClick(row.status)} style={{ cursor: 'pointer' }}>\n                      <th scope=\"row\">{row.status}\n                        <Media className=\"align-items-center\">\n                          <a className=\"avatar rounded-circle mr-3\">\n                            <img alt=\"...\" src={bootstrapImg} />\n                          </a>\n                          <Media>\n                            <span className=\"mb-0 text-sm\">{row.status}</span>\n                          </Media>\n                        </Media>\n                      </th>\n                      <td>{row.budget}</td>\n                      <td>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">{row.completion}</span>\n                          <Progress max=\"100\" value={row.completion.replace('%', '')} barClassName=\"bg-danger\" />\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"avatar-group\">\n                          {row.usersImg.map((img, idx) => (\n                            <a className=\"avatar avatar-sm\" key={idx}>\n                              <img alt=\"...\" className=\"rounded-circle\" src={bootstrapImg} />\n                            </a>\n                          ))}\n                        </div>\n                      </td>\n                      <td className=\"text-right\">\n                        <UncontrolledDropdown>\n                          <DropdownToggle className=\"btn-icon-only text-light\" href=\"#\" role=\"button\" size=\"sm\" color=\"\" onClick={(e) => e.preventDefault()}>\n                            <i className=\"fas fa-ellipsis-v\" />\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdown-menu-arrow\" right>\n                            <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>Action</DropdownItem>\n                            <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>Another action</DropdownItem>\n                            <DropdownItem href=\"#pablo\" onClick={(e) => e.preventDefault()}>Something else here</DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n              <CardFooter className=\"py-4\">\n                <nav aria-label=\"...\">\n                  <Pagination className=\"pagination justify-content-end mb-0\" listClassName=\"justify-content-end mb-0\">\n                    <PaginationItem className=\"disabled\">\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()} tabIndex=\"-1\">\n                        <i className=\"fas fa-angle-left\" />\n                        <span className=\"sr-only\">Previous</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem className=\"active\">\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()}>1</PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()}>\n                        2 <span className=\"sr-only\">(current)</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()}>\n                        3\n                      </PaginationLink>\n                    </PaginationItem>\n                    <PaginationItem>\n                      <PaginationLink href=\"#\" onClick={(e) => e.preventDefault()}>\n                        <i className=\"fas fa-angle-right\" />\n                        <span className=\"sr-only\">Next</span>\n                      </PaginationLink>\n                    </PaginationItem>\n                  </Pagination>\n                </nav>\n              </CardFooter>\n            </Card>\n          </div>\n        </Row>\n      </Container>\n    </>\n  );\n};\nexport default Tables;\n","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Maps.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Register.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Profile.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Icons.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Login.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\NouveauClient.js",["156"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport {\r\n  Button, Card, CardBody, CardHeader, Form, FormGroup, Input, Label, Container, Row, Col, UncontrolledAlert,\r\n  Nav, NavItem, NavLink, TabContent, TabPane\r\n} from \"reactstrap\";\r\nimport classnames from 'classnames';\r\n\r\nfunction formatDate(dateString) {\r\n  const date = new Date(dateString);\r\n  const year = date.getFullYear();\r\n  const month = ('0' + (date.getMonth() + 1)).slice(-2);\r\n  const day = ('0' + date.getDate()).slice(-2);\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nconst NouveauClient = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [client, setClient] = useState({\r\n    nom: \"\",\r\n    prenom: \"\",\r\n    dateNaissance: \"\",\r\n    mutuelle: \"\",\r\n    numeroSecu: \"\",\r\n    email: \"\",\r\n    telephoneFixe: \"\",\r\n    telephonePortable: \"\",\r\n    adresse: \"\",\r\n    codePostal: \"\",\r\n    ville: \"\",\r\n    note: \"\",\r\n    audiogramme: \"\",\r\n    statut: \"\" \r\n  });\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [audiogrammeSuccessMessage, setAudiogrammeSuccessMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Si un client est passé dans l'état, utilisez ses valeurs pour initialiser le formulaire\r\n    if (location.state && location.state.client) {\r\n      const formattedClient = {\r\n        ...location.state.client,\r\n        dateNaissance: formatDate(location.state.client.dateNaissance)\r\n      };\r\n      setClient(formattedClient);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const toggleTab = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  const isMounted = useRef(false);\r\n\r\nuseEffect(() => {\r\n  isMounted.current = true;\r\n  return () => {\r\n    isMounted.current = false;  // Nettoyage en démontant le composant\r\n  };\r\n}, []);\r\n\r\n  const validateForm = () => {\r\n    let tempErrors = {};\r\n    let formIsValid = true;\r\n\r\n    if (!client.nom.trim()) {\r\n      formIsValid = false;\r\n      tempErrors[\"nom\"] = \"Le nom est requis.\";\r\n    }\r\n\r\n    if (!client.email.trim()) {\r\n      formIsValid = false;\r\n      tempErrors[\"email\"] = \"L'email est requis.\";\r\n    }\r\n\r\n    setErrors(tempErrors);\r\n    return formIsValid;\r\n  };\r\n\r\n//   const saveClient = async (clientData) => {\r\n//     const url = clientData._id ? `http://localhost:5100/api/clients/${clientData._id}` : 'http://localhost:5100/api/clients/add';\r\n//     const method = clientData._id ? 'PUT' : 'POST';\r\n\r\n//     try {\r\n//         const response = await fetch(url, {\r\n//             method: method,\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 'Authorization': localStorage.getItem('token')\r\n//             },\r\n//             body: JSON.stringify(clientData)\r\n//         });\r\n\r\n//         if (!response.ok) {\r\n//           const data = await response.json();\r\n//           toast.error(`Erreur: ${data.message}`);\r\n//       } else {\r\n//           const data = await response.json();\r\n//           toast.success(\"Le client a été ajouté/modifié avec succès !\");\r\n//           setTimeout(() => {\r\n//               history.push('/admin/clients');\r\n//           }, 3000);\r\n//       }\r\n//   } catch (error) {\r\n//       console.error('Erreur lors de l\\'opération sur le client:', error);\r\n//       toast.error(`Erreur lors de l'opération sur le client: ${error.message}`);\r\n//   }\r\n// };\r\n\r\nconst saveClient = async (clientData) => {\r\n  const url = clientData._id ? `http://localhost:5100/api/clients/${clientData._id}` : 'http://localhost:5100/api/clients/add';\r\n  const method = clientData._id ? 'PUT' : 'POST';\r\n\r\n  console.log('Envoi des données du client:', clientData);  // Log des données envoyées\r\n\r\n  try {\r\n      const response = await fetch(url, {\r\n          method: method,\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': localStorage.getItem('token')\r\n          },\r\n          body: JSON.stringify(clientData)\r\n      });\r\n\r\n      console.log('Statut de la réponse:', response.status);  // Log du statut de réponse HTTP\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        console.log('Erreur lors de l\\'enregistrement:', data);  // Log de l'erreur\r\n        toast.error(`Erreur: ${data.message}`);\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log('Réponse du serveur:', data);  // Log de la réponse\r\n      toast.success(\"Le client a été ajouté/modifié avec succès !\");\r\n      setTimeout(() => {\r\n          history.push('/admin/clients');\r\n      }, 3000);\r\n  } catch (error) {\r\n      console.error('Erreur lors de l\\'opération sur le client:', error);\r\n      toast.error(`Erreur lors de l'opération sur le client: ${error.message}`);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setClient({ ...client, [name]: value });\r\n    // Clear errors\r\n    if (!!errors[name]) setErrors({ ...errors, [name]: null });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      saveClient(client);\r\n    }\r\n  };\r\n  const handleSubmitAudiogramme = async (e) => {\r\n    e.preventDefault();\r\n    const audiogrammeData = {\r\n      ...client,\r\n      audiogramme: client.audiogramme\r\n    };\r\n  \r\n    const url = client._id ? `http://localhost:5100/api/clients/${client._id}` : 'http://localhost:5100/api/clients/add';\r\n    const method = client._id ? 'PUT' : 'POST';\r\n  \r\n    try {\r\n      const response = await fetch(url, {\r\n        method: method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': localStorage.getItem('token')\r\n        },\r\n        body: JSON.stringify(audiogrammeData)\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`HTTP status ${response.status}: ${errorText}`);\r\n      }\r\n  \r\n      const data = await response.json();\r\n      console.log('Opération réussie:', data);\r\n      setAudiogrammeSuccessMessage(\"Le bilan auditif a été enregistré avec succès.\");\r\n      setTimeout(() => {\r\n        setAudiogrammeSuccessMessage(\"\");\r\n        history.push('/admin/clients'); // Redirection après l'affichage du message de succès\r\n      }, 3000); // Affichage du message pendant 3 secondes\r\n  \r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'enregistrement du bilan auditif:\", error);\r\n      setErrors({ form: \"Erreur lors de l'opération sur le bilan auditif.\" });\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    // <div style={{ paddingTop: '50px', backgroundColor: 'linear-gradient(87deg, #11cdef 0, #1171ef 100%) !important' }}>\r\n       <div style={{ paddingTop: '50px', background: 'linear-gradient(87deg, #11cdef 0, #1171ef 100%)' }}>\r\n    <Container className=\"mt-5\">\r\n      <Card>\r\n      <ToastContainer position=\"bottom-left\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n      <CardHeader className=\"bg-white text-white\">\r\n            <h4 className=\"mb-0\">{client._id ? \"Modifier Client\" : \"Ajouter Nouveau Client\"}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === '1' })}\r\n                  onClick={() => { toggleTab('1'); }}\r\n                  style={{ cursor: 'pointer' }}\r\n                >\r\n                  Informations Générales\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === '2' })}\r\n                  onClick={() => { toggleTab('2'); }}\r\n                  style={{ cursor: 'pointer' }}\r\n                >\r\n                  Bilan Auditif\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"1\">\r\n              {/* Votre formulaire existant ici */}\r\n              {successMessage && (\r\n                <UncontrolledAlert color=\"success\" className=\"fixed-alert\" style={{ position: 'fixed', top: 0, left: 0, right: 0, zIndex: 1050 }} fade={false}>\r\n                  <span className=\"alert-inner--icon\">\r\n                    <i className=\"ni ni-like-2\" />\r\n                  </span>\r\n                  <span className=\"alert-inner--text\">\r\n                    <strong>Succès!</strong> {successMessage}\r\n                  </span>\r\n                </UncontrolledAlert>\r\n              )}\r\n              <Form onSubmit={handleSubmit}>\r\n              <Row form style={{ paddingTop: '50px' }}>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"nom\">Nom</Label>\r\n                    <Input type=\"text\" name=\"nom\" id=\"nom\" value={client.nom} onChange={handleInputChange} required />\r\n                    {errors.nom && <p style={{ color: 'red' }}>{errors.nom}</p>}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"prenom\">Prénom</Label>\r\n                    <Input type=\"text\" name=\"prenom\" id=\"prenom\" value={client.prenom} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={4}>\r\n                <FormGroup>\r\n                    <Label for=\"dateNaissance\">Date de Naissance</Label>\r\n                    <Input type=\"date\" name=\"dateNaissance\" id=\"dateNaissance\" value={client.dateNaissance || ''} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"mutuelle\">Mutuelle</Label>\r\n                    <Input type=\"text\" name=\"mutuelle\" id=\"mutuelle\" value={client.mutuelle} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"numeroSecu\">Numéro de Sécurité Sociale</Label>\r\n                    <Input type=\"text\" name=\"numeroSecu\" id=\"numeroSecu\" value={client.numeroSecu} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n              <Col md={4}>\r\n              <FormGroup>\r\n  <Label for=\"statut\">Statut</Label>\r\n  <Input type=\"select\" name=\"statut\" id=\"statut\" value={client.statut} onChange={handleInputChange}>\r\n    <option value=\"\">Sélectionner un statut</option>\r\n    <option value=\"Rdv fixé\">Rdv fixé</option>\r\n    <option value=\"Rdv Annulé\">Rdv Annulé</option>\r\n    <option value=\"Appareillé\">Appareillé</option>\r\n    <option value=\"Période d'essai\">Période d'essai</option>\r\n    <option value=\"Facturé\">Facturé</option>\r\n  </Input>\r\n</FormGroup>\r\n</Col>\r\n</Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"telephoneFixe\">Téléphone Fixe</Label>\r\n                    <Input type=\"text\" name=\"telephoneFixe\" id=\"telephoneFixe\" value={client.telephoneFixe} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"telephonePortable\">Téléphone Portable</Label>\r\n                    <Input type=\"text\" name=\"telephonePortable\" id=\"telephonePortable\" value={client.telephonePortable} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <FormGroup>\r\n                <Label for=\"adresse\">Adresse</Label>\r\n                <Input type=\"text\" name=\"adresse\" id=\"adresse\" value={client.adresse} onChange={handleInputChange} />\r\n              </FormGroup>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"codePostal\">Code Postal</Label>\r\n                    <Input type=\"text\" name=\"codePostal\" id=\"codePostal\" value={client.codePostal} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"ville\">Ville</Label>\r\n                    <Input type=\"text\" name=\"ville\" id=\"ville\" value={client.ville} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <FormGroup>\r\n                <Label for=\"email\">Email</Label>\r\n                <Input type=\"email\" name=\"email\" id=\"email\" value={client.email} onChange={handleInputChange} required />\r\n                {errors.email && <p style={{ color: 'red' }}>{errors.email}</p>}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"note\">Note</Label>\r\n                <Input type=\"textarea\" name=\"note\" id=\"note\" value={client.note} onChange={handleInputChange} />\r\n              </FormGroup>\r\n                <Button type=\"submit\" color=\"primary\">Enregistrer</Button>\r\n                <Button type=\"button\" color=\"secondary\" onClick={() => history.push('/admin/clients')}>Annuler</Button>\r\n              </Form>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n  {audiogrammeSuccessMessage && (\r\n    <UncontrolledAlert color=\"success\" className=\"fixed-alert\" fade={false}>\r\n      <span className=\"alert-inner--icon\"><i className=\"ni ni-like-2\" /></span>\r\n      <span className=\"alert-inner--text\"><strong>Succès!</strong> {audiogrammeSuccessMessage}</span>\r\n    </UncontrolledAlert>\r\n  )}\r\n  <Form onSubmit={handleSubmitAudiogramme} style={{ paddingTop: '50px' }}>\r\n    <FormGroup>\r\n      <Label for=\"audiogramme\">Audiogramme</Label>\r\n      <Input type=\"text\" name=\"audiogramme\" id=\"audiogramme\" value={client.audiogramme} onChange={handleInputChange} />\r\n    </FormGroup>\r\n    {/* Ajoutez plus de champs selon vos besoins ici */}\r\n    <Button type=\"submit\" color=\"primary\">Enregistrer Bilan</Button>\r\n  </Form>\r\n</TabPane>\r\n\r\n          </TabContent>\r\n        </CardBody>\r\n      </Card>\r\n      \r\n    </Container>\r\n    \r\n    </div>\r\n  );\r\n}\r\n  \r\n\r\nexport default NouveauClient;\r\n","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Clients.js",["157","158"],"import { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport {\r\n  Modal, ModalHeader, ModalBody, ModalFooter,\r\n  Button,\r\n  CardBody,\r\n  Card,\r\n  CardHeader,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { useDropzone } from 'react-dropzone';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\nconst formatDate = (isoString) => {\r\n  if (!isoString) return '';\r\n  const date = new Date(isoString);\r\n  return date.toLocaleDateString('fr-FR');  // ou 'en-US' selon le format local que vous préférez\r\n}\r\n\r\nconst Clients = () => {\r\n  const history = useHistory();\r\n  const [clients, setClients] = useState([]);\r\n  const [totalClients, setTotalClients] = useState(0);\r\n  const [modal, setModal] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadSuccess, setUploadSuccess] = useState(false);\r\n  const [uploadError, setUploadError] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const toggleModal = () => {\r\n    setModal(!modal);\r\n    if (!modal) {\r\n      if (!isUploading && !uploadSuccess) {\r\n        setSelectedFile(null);\r\n        setUploadError(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOnSelect = (row, isSelect) => {\r\n    console.log(`Select ${isSelect ? 'on' : 'off'} for row id ${row._id}`);\r\n    if (isSelect) {\r\n      setSelected(prevSelected => {\r\n        const newSelected = [...prevSelected, row._id];\r\n        console.log('New selected after add:', newSelected);\r\n        return newSelected;\r\n      });\r\n    } else {\r\n      setSelected(prevSelected => {\r\n        const newSelected = prevSelected.filter(x => x !== row._id);\r\n        console.log('New selected after remove:', newSelected);\r\n        return newSelected;\r\n      });\r\n    }\r\n  };\r\n  \r\n  const handleOnSelectAll = (isSelect, rows) => {\r\n    console.log(`Select all ${isSelect ? 'on' : 'off'}`);\r\n    if (isSelect) {\r\n      const idsToSelect = rows.map(r => r._id);\r\n      console.log('Selecting all ids:', idsToSelect);\r\n      setSelected(idsToSelect);\r\n    } else {\r\n      setSelected([]);\r\n    }\r\n  };\r\n  \r\n  \r\n  const selectAllRenderer = ({ mode, checked, indeterminate }) => (\r\n    <input\r\n      type={mode}\r\n      checked={checked}\r\n      ref={input => {\r\n        if (input) input.indeterminate = indeterminate;\r\n      }}\r\n      // onChange={e => {\r\n      //   if (e.target.checked) {\r\n      //     const idsToSelect = clients.map(client => client._id);  // Assurez-vous que cette ligne utilise la bonne clé\r\n      //     setSelected(idsToSelect);\r\n      //   } else {\r\n      //     setSelected([]);\r\n      //   }\r\n      // }}\r\n      onChange={e => {\r\n        handleOnSelectAll(e.target.checked, clients);  // Appelez handleOnSelectAll avec le bon contexte\r\n      }}\r\n    />\r\n  );\r\n  \r\n  const handleDeleteSelected = async () => {\r\n    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer les clients sélectionnés ?\")) {\r\n      for (const clientId of selected) {\r\n        await fetch(`http://localhost:5100/api/clients/${clientId}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n          }\r\n        })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error(`Failed to delete client ${clientId}, status: ${response.status}`);\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          if (!data.success) {\r\n            throw new Error(data.message);\r\n          }\r\n          setTotalClients(prevTotal => prevTotal - 1);\r\n          toast.success(`Client supprimé avec succès!`);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n          toast.error(`Error deleting client ${clientId}: ${error.message}`);\r\n        });\r\n      }\r\n      // Mise à jour de l'état après la suppression de tous les clients sélectionnés\r\n      const newClients = clients.filter(client => !selected.includes(client._id));\r\n      setClients(newClients);\r\n      setSelected([]);\r\n    }\r\n  };\r\n  \r\n  \r\n  const deleteButton = selected.length > 0 ? (\r\n    <Button color=\"danger\" onClick={handleDeleteSelected} style={{ marginLeft: '10px' }}>\r\n      Supprimer la sélection\r\n    </Button>\r\n  ) : null;\r\n  \r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    clickToSelect: true,\r\n    selected: selected,\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: handleOnSelectAll,\r\n    selectionHeaderRenderer: selectAllRenderer,\r\n    style: { backgroundColor: '#c8e6c9' }\r\n  };\r\n  \r\n\r\n  const fetchClients = (setClients) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      console.error('Token not found in localStorage');\r\n      return;\r\n    }\r\n\r\n    const cleanToken = token.trim();\r\n    const formattedToken = cleanToken.replace('JWT ', '');\r\n\r\n    console.log(\"Formatted Token from localStorage:\", formattedToken);\r\n\r\n    fetch('http://localhost:5100/api/clients', {\r\n      headers: {\r\n         'Authorization': `Bearer ${formattedToken}`\r\n      }\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP status ${response.status}`);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      console.log('Clients fetched:', data);\r\n      setClients(data);\r\n      setTotalClients(data.length);\r\n    })\r\n    .catch(err => {\r\n      console.error('Error fetching clients:', err.message);\r\n    });\r\n};\r\n\r\n  const handleAddClient = () => {\r\n    console.log('Redirection to /admin/nouveauClient');\r\n    history.push('/admin/nouveauClient');\r\n  };\r\n\r\n  const handleStatusChange = (clientId, newStatus) => {\r\n    // Mise à jour de l'état local\r\n    const updatedClients = clients.map(client =>\r\n      client._id === clientId ? { ...client, statut: newStatus } : client\r\n    );\r\n    setClients(updatedClients);\r\n  \r\n    // Envoie de la mise à jour au serveur\r\n    fetch(`http://localhost:5100/api/clients/${clientId}/status`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n      },\r\n      body: JSON.stringify({ statut: newStatus })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if (!data.success) {\r\n        console.error('Failed to update status:', data.message);\r\n        toast.error(`Erreur lors de la mise à jour du statut: ${data.message}`);\r\n      } else {\r\n        toast.success('Statut mis à jour avec succès!');\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error updating status:', error);\r\n      toast.error(`Erreur: ${error.message}`);\r\n    });\r\n  };\r\n  \r\n\r\n  const columns = [\r\n    { dataField: \"_id\", text: \"ID\", hidden: true },\r\n    { dataField: \"nom\", text: \"Nom\", sort: true },  // Permet le tri sur la colonne \"Nom\"\r\n    { dataField: \"prenom\", text: \"Prénom\", sort: true },  // Permet le tri sur la colonne \"Prénom\"\r\n    { dataField: \"email\", text: \"Email\", sort: true },  // Permet le tri sur la colonne \"Email\"\r\n    { dataField: \"telephonePortable\", text: \"Téléphone Portable\", sort: true },  // Permet le tri sur la colonne \"Téléphone Portable\"\r\n    { dataField: \"ville\", text: \"Ville\", sort: true },  // Permet le tri sur la colonne \"Ville\"\r\n    {\r\n      dataField: \"dateNaissance\",\r\n      text: \"Date de Naissance\",\r\n      formatter: (cellContent, row) => formatDate(row.dateNaissance),\r\n      sort: true  // Permet le tri sur la colonne \"Date de Naissance\"\r\n    },\r\n    {\r\n      dataField: \"statut\",\r\n      text: \"Statut\",\r\n      formatter: (cell, row) => {\r\n        return (\r\n          <select\r\n            defaultValue={row.statut}\r\n            onClick={(e) => e.stopPropagation()} \r\n            onChange={(e) => handleStatusChange(row._id, e.target.value)}\r\n            className=\"form-control\"\r\n          >\r\n            <option value=\"Rdv fixé\">Rdv fixé</option>\r\n            <option value=\"Rdv Annulé\">Rdv Annulé</option>\r\n            <option value=\"Appareillé\">Appareillé</option>\r\n            <option value=\"Période d'essai\">Période d'essai</option>\r\n            <option value=\"Facturé\">Facturé</option>\r\n          </select>\r\n        );\r\n      },\r\n      editor: {\r\n        type: 'select',\r\n        options: [\r\n          { value: 'Rdv fixé', label: 'Rdv fixé' },\r\n          { value: 'Rdv Annulé', label: 'Rdv Annulé' },\r\n          { value: 'Appareillé', label: 'Appareillé' },\r\n          { value: \"Période d'essai\", label: \"Période d'essai\" },\r\n          { value: 'Facturé', label: 'Facturé' }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      dataField: 'actions',\r\n      text: 'Actions',\r\n      formatter: (cell, row) => (\r\n        <div>\r\n          <Button color=\"primary\" size=\"sm\" onClick={() => handleEditClient(row)}>\r\n            <i className=\"fas fa-pencil-alt\" />\r\n          </Button>\r\n          {' '}\r\n          <Button color=\"danger\" size=\"sm\" onClick={() => handleDeleteClient(row._id)}>\r\n            <i className=\"fas fa-trash\" />\r\n          </Button>\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n  \r\n\r\n  const handleEditClient = (client) => {\r\n    history.push({\r\n      pathname: '/admin/nouveauClient',\r\n      state: { client: client }\r\n    });\r\n  };\r\n\r\n\r\n  const handleDeleteClient = (clientId) => {\r\n    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer ce client ?\")) {\r\n      fetch(`http://localhost:5100/api/clients/${clientId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n        }\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to delete client, status: ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        if (data.success) {\r\n          // Mettre à jour l'état immédiatement pour refléter la suppression\r\n          const newClients = clients.filter(client => client._id !== clientId);\r\n          \r\n          setSelected(selected.filter(id => id !== clientId)); // Nettoyer aussi les sélections\r\n          setTotalClients(prevTotal => prevTotal - 1);\r\n          toast.success(\"Client supprimé avec succès!\");\r\n          setClients(newClients);\r\n          console.log(\"Clients after deletion\", newClients);\r\n        } else {\r\n          throw new Error(data.message);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n        toast.error(`Error: ${error.message}`);\r\n      });\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const handleFileUpload = () => {\r\n    if (!selectedFile) {\r\n      toast.warn(\"No file selected for upload.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    fetch('http://localhost:5100/api/clients/import', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n      },\r\n      body: formData\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to upload file');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setUploadSuccess(true);\r\n        console.log(\"Import success:\", data);\r\n        fetchClients(setClients);\r\n        setIsUploading(false);\r\n        \r\n        setSelectedFile(null);\r\n        toast.success(\"Fichier importé avec succès!\");\r\n        toggleModal(); // Ferme le modal après l'importation réussie\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Import error:\", err);\r\n        setIsUploading(false);\r\n        setUploadError(\"Error during import: \" + err.message);\r\n        toast.error(\"Error during import: \" + err.message);\r\n      });\r\n      setUploadSuccess(false);\r\n  };\r\n\r\n  const pagination = paginationFactory({\r\n    page: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    sizePerPageRenderer: ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          {\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={e => onSizePerPageChange(e.target.value)}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n          }{\" \"}\r\n        </label>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  const { SearchBar } = Search;\r\n  useEffect(() => {\r\n    fetchClients(setClients);\r\n  }, []);\r\n  \r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop: acceptedFiles => {\r\n      console.log(acceptedFiles);\r\n      setSelectedFile(acceptedFiles[0]);\r\n      setUploadSuccess(true);\r\n      setUploadError(\"\");\r\n      //toast.info(\"File selected for upload.\");\r\n    }\r\n  });\r\n\r\n  const sendEmailsToSelected = () => {\r\n    const selectedClients = clients.filter(client => selected.includes(client.id));\r\n    console.log(\"Sending emails to:\", selectedClients.map(c => c.email));\r\n    // Logique pour envoyer des emails\r\n  };\r\n\r\n  const handleSelectAllClick = () => {\r\n    if (selected.length < clients.length) {\r\n      setSelected(clients.map(x => x.id)); // Sélectionner tous les ID\r\n    } else {\r\n      setSelected([]); // Désélectionner tous\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Header totalClients={totalClients} />\r\n      <ToastContainer position=\"bottom-left\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0 d-flex align-items-center justify-content-between\">\r\n                <div>\r\n                  <h3 className=\"mb-0\" style={{ paddingBottom: '10px' }}>Clients (Total : {totalClients})</h3>\r\n                  {/* <Button color=\"info\" onClick={handleSelectAllClick}>\r\n  {selected.length === clients.length ? \"Désélectionner Tout\" : \"Sélectionner Tout\"}\r\n</Button> */}\r\n                </div>\r\n                <div>\r\n                  <Button color=\"primary\" onClick={handleAddClient} style={{ marginRight: '10px' }}>Ajouter Client</Button>\r\n                  <Button color=\"info\" onClick={toggleModal}>Importer Clients</Button>\r\n                  {/* <Button color=\"info\" onClick={sendEmailsToSelected}>Envoyer Mail</Button> */}\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n              <ToolkitProvider keyField=\"id\" data={clients} columns={columns} search>\r\n  {props => (\r\n    <div>\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col-6\">\r\n        {deleteButton}\r\n          {/* Ici, vous pouvez remettre les boutons ou autres éléments comme avant */}\r\n        </div>\r\n        <div className=\"col-6 text-right\">\r\n          <SearchBar {...props.searchProps} className=\"form-control-sm\" placeholder=\"Rechercher\" style={{ border: '1px solid black', maxWidth: '250px' }} />\r\n        </div>\r\n      </div>\r\n      <div style={{ overflowX: 'auto' }}>\r\n        <BootstrapTable\r\n          {...props.baseProps}\r\n          keyField=\"_id\"\r\n          bootstrap4\r\n          pagination={pagination}\r\n          data={clients}\r\n          columns={columns}\r\n          selectRow={selectRow}\r\n          bordered={false}\r\n        />\r\n      </div>\r\n    </div>\r\n  )}\r\n</ToolkitProvider>\r\n\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n      <Modal isOpen={modal} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>Importer des fichiers</ModalHeader>\r\n        <ModalBody>\r\n          <div {...getRootProps({ className: 'dropzone' })} style={{ border: '2px dashed #007bff', padding: '20px', textAlign: 'center' }}>\r\n            <input {...getInputProps()} />\r\n            <i className=\"fas fa-file-upload fa-2x\"></i>\r\n            <p>Formats supportés : .csv, .xlsx</p>\r\n            {isDragActive ? (\r\n              <p>Relâchez le fichier ici...</p>\r\n            ) : (\r\n              <p>Glissez-déposez des fichiers ici, ou cliquez pour sélectionner des fichiers</p>\r\n            )}\r\n            {isUploading && <div>Chargement...</div>}\r\n            {uploadSuccess && <div className=\"alert alert-success\">Fichier importé avec succès!</div>}\r\n            {uploadError && <div className=\"alert alert-danger\">{uploadError}</div>}\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={handleFileUpload} disabled={!selectedFile}>\r\n            OK\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={toggleModal}>Fermer</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Clients;","C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\config.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\Header.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\EditHeader.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\UserHeader.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\variables\\charts.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Corbeille.js",[],"C:\\Users\\esthe\\OneDrive\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ClientStatusPage.js",["159","160","161"],"import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Container, Row, Card, CardHeader, CardBody } from \"reactstrap\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min\";\r\nimport axios from 'axios';\r\n\r\nconst ClientStatusPage = ({ match }) => {\r\n  const { status } = match.params.statut; // Récupérer le statut de l'URL\r\n  const [clients, setClients] = useState([]); // État pour stocker les clients\r\n  const history = useHistory();\r\n  const totalClients = clients.length; // Nombre total de clients affichés\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchClientsByStatus = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5100/api/clients/by-status/${status}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n          }\r\n        });\r\n        setClients(response.data);\r\n      } catch (err) {\r\n        console.error('Error fetching clients:', err);\r\n      }\r\n    };\r\n\r\n    fetchClientsByStatus();\r\n  }, [status]);\r\n\r\n const columns = [\r\n    { dataField: \"_id\", text: \"ID\", hidden: true },\r\n    { dataField: \"nom\", text: \"Nom\", sort: true },  // Permet le tri sur la colonne \"Nom\"\r\n    { dataField: \"prenom\", text: \"Prénom\", sort: true },  // Permet le tri sur la colonne \"Prénom\"\r\n    { dataField: \"email\", text: \"Email\", sort: true },  // Permet le tri sur la colonne \"Email\"\r\n    { dataField: \"telephonePortable\", text: \"Téléphone Portable\", sort: true },  // Permet le tri sur la colonne \"Téléphone Portable\"\r\n    { dataField: \"ville\", text: \"Ville\", sort: true },  // Permet le tri sur la colonne \"Ville\"\r\n    {\r\n      dataField: \"dateNaissance\",\r\n      text: \"Date de Naissance\",\r\n    //   formatter: (cellContent, row) => formatDate(row.dateNaissance),\r\n      sort: true  // Permet le tri sur la colonne \"Date de Naissance\"\r\n    },\r\n    {\r\n      dataField: \"statut\",\r\n      text: \"Statut\",\r\n      formatter: (cell, row) => {\r\n        return (\r\n          <select\r\n            defaultValue={row.statut}\r\n            onClick={(e) => e.stopPropagation()} \r\n            // onChange={(e) => handleStatusChange(row._id, e.target.value)}\r\n            className=\"form-control\"\r\n          >\r\n            <option value=\"Rdv fixé\">Rdv fixé</option>\r\n            <option value=\"Rdv Annulé\">Rdv Annulé</option>\r\n            <option value=\"Appareillé\">Appareillé</option>\r\n            <option value=\"Période d'essai\">Période d'essai</option>\r\n            <option value=\"Facturé\">Facturé</option>\r\n          </select>\r\n        );\r\n      },\r\n      editor: {\r\n        type: 'select',\r\n        options: [\r\n          { value: 'Rdv fixé', label: 'Rdv fixé' },\r\n          { value: 'Rdv Annulé', label: 'Rdv Annulé' },\r\n          { value: 'Appareillé', label: 'Appareillé' },\r\n          { value: \"Période d'essai\", label: \"Période d'essai\" },\r\n          { value: 'Facturé', label: 'Facturé' }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      dataField: 'actions',\r\n      text: 'Actions',\r\n      formatter: (cell, row) => (\r\n        <div>\r\n          {/* <Button color=\"primary\" size=\"sm\" onClick={() => handleEditClient(row)}>\r\n            <i className=\"fas fa-pencil-alt\" />\r\n          </Button> */}\r\n          {' '}\r\n          {/* <Button color=\"danger\" size=\"sm\" onClick={() => handleDeleteClient(row._id)}>\r\n            <i className=\"fas fa-trash\" />\r\n          </Button> */}\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n  const tablePagination = paginationFactory({\r\n    page: 1,\r\n    sizePerPage: 10,\r\n    lastPageText: '>>',\r\n    firstPageText: '<<',\r\n    nextPageText: '>',\r\n    prePageText: '<',\r\n    showTotal: true,\r\n    alwaysShowAllBtns: true,\r\n    onPageChange: function (page, sizePerPage) {\r\n      console.log('page', page);\r\n      console.log('sizePerPage', sizePerPage);\r\n    },\r\n    onSizePerPageChange: function (page, sizePerPage) {\r\n      console.log('page', page);\r\n      console.log('sizePerPage', sizePerPage);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <h3 className=\"mb-0\">Clients avec le statut: {status}</h3>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider keyField=\"id\" data={clients} columns={columns} search>\r\n                  {props => (\r\n                    <BootstrapTable\r\n                      {...props.baseProps}\r\n                      pagination={tablePagination}\r\n                      bordered={false}\r\n                    />\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientStatusPage;\r\n",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":8,"column":8,"nodeType":"168","messageId":"169","endLine":8,"endColumn":20},{"ruleId":"166","severity":1,"message":"170","line":11,"column":8,"nodeType":"168","messageId":"169","endLine":11,"endColumn":21},{"ruleId":"166","severity":1,"message":"171","line":12,"column":8,"nodeType":"168","messageId":"169","endLine":12,"endColumn":23},{"ruleId":"166","severity":1,"message":"172","line":13,"column":8,"nodeType":"168","messageId":"169","endLine":13,"endColumn":28},{"ruleId":"166","severity":1,"message":"173","line":5,"column":3,"nodeType":"168","messageId":"169","endLine":5,"endColumn":8},{"ruleId":"166","severity":1,"message":"174","line":21,"column":3,"nodeType":"168","messageId":"169","endLine":21,"endColumn":22},{"ruleId":"166","severity":1,"message":"175","line":27,"column":8,"nodeType":"168","messageId":"169","endLine":27,"endColumn":18},{"ruleId":"166","severity":1,"message":"176","line":28,"column":8,"nodeType":"168","messageId":"169","endLine":28,"endColumn":16},{"ruleId":"177","severity":1,"message":"178","line":81,"column":27,"nodeType":"179","endLine":81,"endColumn":69},{"ruleId":"177","severity":1,"message":"178","line":99,"column":29,"nodeType":"179","endLine":99,"endColumn":71},{"ruleId":"166","severity":1,"message":"180","line":58,"column":26,"nodeType":"168","messageId":"169","endLine":58,"endColumn":43},{"ruleId":"166","severity":1,"message":"181","line":410,"column":9,"nodeType":"168","messageId":"169","endLine":410,"endColumn":29},{"ruleId":"166","severity":1,"message":"182","line":416,"column":9,"nodeType":"168","messageId":"169","endLine":416,"endColumn":29},{"ruleId":"166","severity":1,"message":"183","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":19},{"ruleId":"166","severity":1,"message":"184","line":13,"column":9,"nodeType":"168","messageId":"169","endLine":13,"endColumn":16},{"ruleId":"166","severity":1,"message":"185","line":14,"column":9,"nodeType":"168","messageId":"169","endLine":14,"endColumn":21},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'ConfirmEmail' is defined but never used.","Identifier","unusedVar","'ResetPassword' is defined but never used.","'ConfirmPassword' is defined but never used.","'ResetPasswordSuccess' is defined but never used.","'Badge' is defined but never used.","'UncontrolledTooltip' is defined but never used.","'angularImg' is defined but never used.","'team1Img' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setSuccessMessage' is assigned a value but never used.","'sendEmailsToSelected' is assigned a value but never used.","'handleSelectAllClick' is assigned a value but never used.","'useParams' is defined but never used.","'history' is assigned a value but never used.","'totalClients' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]