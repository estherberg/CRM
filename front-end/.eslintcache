[{"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\index.js":"1","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\PrivateRoute\\AuthRoutes.js":"2","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\PrivateRoute\\PrivateRoute.js":"3","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\layouts\\Admin.js":"4","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\layouts\\Auth.js":"5","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\routes.js":"6","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Navbars\\AuthNavbar.js":"7","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Navbars\\AdminNavbar.js":"8","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Footers\\AdminFooter.js":"9","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Sidebar\\Sidebar.js":"10","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Footers\\AuthFooter.js":"11","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\EditProfile.js":"12","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ConfirmEmail.js":"13","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ConfirmPassword.js":"14","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\UsersTable.js":"15","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ResetPasswordSuccess.js":"16","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ResetPassword.js":"17","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\network\\ApiAxios.js":"18","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\Index.js":"19","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Maps.js":"20","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Login.js":"21","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Profile.js":"22","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Tables.js":"23","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Register.js":"24","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Icons.js":"25","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Clients.js":"26","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\NouveauClient.js":"27","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\config.js":"28","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\Header.js":"29","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\UserHeader.js":"30","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\EditHeader.js":"31","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\variables\\charts.js":"32"},{"size":831,"mtime":1721215721062,"results":"33","hashOfConfig":"34"},{"size":378,"mtime":1720336956029,"results":"35","hashOfConfig":"34"},{"size":378,"mtime":1720336952008,"results":"36","hashOfConfig":"34"},{"size":1909,"mtime":1720441440318,"results":"37","hashOfConfig":"34"},{"size":2488,"mtime":1720336934490,"results":"38","hashOfConfig":"34"},{"size":3357,"mtime":1720949960000,"results":"39","hashOfConfig":"34"},{"size":3197,"mtime":1721208569107,"results":"40","hashOfConfig":"34"},{"size":6282,"mtime":1720510609728,"results":"41","hashOfConfig":"34"},{"size":2016,"mtime":1720118429099,"results":"42","hashOfConfig":"34"},{"size":10434,"mtime":1720980905212,"results":"43","hashOfConfig":"34"},{"size":2881,"mtime":1719902596329,"results":"44","hashOfConfig":"34"},{"size":5702,"mtime":1720001739481,"results":"45","hashOfConfig":"34"},{"size":1449,"mtime":1719997006702,"results":"46","hashOfConfig":"34"},{"size":3740,"mtime":1719996623467,"results":"47","hashOfConfig":"34"},{"size":2062,"mtime":1719904204308,"results":"48","hashOfConfig":"34"},{"size":913,"mtime":1719997026840,"results":"49","hashOfConfig":"34"},{"size":4433,"mtime":1720001798596,"results":"50","hashOfConfig":"34"},{"size":1693,"mtime":1720510040073,"results":"51","hashOfConfig":"34"},{"size":11788,"mtime":1720001424857,"results":"52","hashOfConfig":"34"},{"size":2839,"mtime":1720001760891,"results":"53","hashOfConfig":"34"},{"size":6865,"mtime":1720698854688,"results":"54","hashOfConfig":"34"},{"size":18967,"mtime":1720336918294,"results":"55","hashOfConfig":"34"},{"size":70577,"mtime":1720001829960,"results":"56","hashOfConfig":"34"},{"size":10657,"mtime":1720506877882,"results":"57","hashOfConfig":"34"},{"size":121150,"mtime":1720001750032,"results":"58","hashOfConfig":"34"},{"size":11806,"mtime":1721222130101,"results":"59","hashOfConfig":"34"},{"size":12189,"mtime":1721213858640,"results":"60","hashOfConfig":"34"},{"size":147,"mtime":1719858732158,"results":"61","hashOfConfig":"34"},{"size":5877,"mtime":1720001373316,"results":"62","hashOfConfig":"34"},{"size":1826,"mtime":1720336897673,"results":"63","hashOfConfig":"34"},{"size":1843,"mtime":1720336908717,"results":"64","hashOfConfig":"34"},{"size":10033,"mtime":1720001699377,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"q406pr",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\index.js",[],["134","135"],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\PrivateRoute\\AuthRoutes.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\layouts\\Admin.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\layouts\\Auth.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\routes.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Navbars\\AuthNavbar.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Navbars\\AdminNavbar.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Footers\\AdminFooter.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Footers\\AuthFooter.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\EditProfile.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ConfirmEmail.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ConfirmPassword.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\UsersTable.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ResetPasswordSuccess.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\ResetPassword.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\network\\ApiAxios.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\Index.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Maps.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Login.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Profile.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Tables.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Register.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Icons.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\Clients.js",["136","137"],"import { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport {\r\n  Modal, ModalHeader, ModalBody, ModalFooter,\r\n  Button,\r\n  CardBody,\r\n  Card,\r\n  CardHeader,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { useDropzone } from 'react-dropzone';\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n\r\nconst formatDate = (isoString) => {\r\n  if (!isoString) return '';\r\n  const date = new Date(isoString);\r\n  return date.toLocaleDateString('fr-FR');  // ou 'en-US' selon le format local que vous préférez\r\n}\r\n\r\nconst Tables = () => {\r\n  const history = useHistory();\r\n  const [clients, setClients] = useState([]);\r\n  const [totalClients, setTotalClients] = useState(0);\r\n  const [modal, setModal] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadSuccess, setUploadSuccess] = useState(false);\r\n  const [uploadError, setUploadError] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const toggleModal = () => {\r\n    setModal(!modal);\r\n    if (!modal) {\r\n      if (!isUploading && !uploadSuccess) {\r\n        setSelectedFile(null);\r\n        setUploadError(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOnSelect = (row, isSelect) => {\r\n    if (isSelect) {\r\n      setSelected([...selected, row.id]);\r\n    } else {\r\n      setSelected(selected.filter(x => x !== row.id));\r\n    }\r\n  };\r\n\r\n  const handleOnSelectAll = (isSelect, rows) => {\r\n    const ids = rows.map(r => r.id);\r\n    if (isSelect) {\r\n      setSelected(ids);\r\n    } else {\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    clickToSelect: true,\r\n    selected: selected,\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: handleOnSelectAll\r\n  };\r\n\r\n  const fetchClients = (setClients) => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      console.error('Token not found in localStorage');\r\n      return;\r\n    }\r\n\r\n    const cleanToken = token.trim();\r\n    const formattedToken = cleanToken.replace('JWT ', '');\r\n\r\n    console.log(\"Formatted Token from localStorage:\", formattedToken);\r\n\r\n    fetch('http://localhost:5100/api/clients', {\r\n      headers: {\r\n        'Authorization': `Bearer ${formattedToken}`\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP status ${response.status}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        console.log('Clients fetched:', data);\r\n        setClients(data);\r\n        setTotalClients(data.length);\r\n      })\r\n      .catch(err => {\r\n        console.error('Error fetching clients:', err.message);\r\n      });\r\n  };\r\n\r\n  const handleAddClient = () => {\r\n    console.log('Redirection to /admin/nouveauClient');\r\n    history.push('/admin/nouveauClient');\r\n  };\r\n\r\n  const columns = [\r\n    { dataField: \"id\", text: \"ID\", hidden: true },\r\n    { dataField: \"nom\", text: \"Nom\" },\r\n    { dataField: \"prenom\", text: \"Prénom\" },\r\n    { dataField: \"email\", text: \"Email\" },\r\n    { dataField: \"telephonePortable\", text: \"Téléphone Portable\" },\r\n    { dataField: \"ville\", text: \"Ville\" },\r\n    {\r\n      dataField: \"dateNaissance\",\r\n      text: \"Date de Naissance\",\r\n      formatter: (cellContent, row) => {\r\n        return formatDate(row.dateNaissance);\r\n      }\r\n    },\r\n    {\r\n      dataField: 'actions',\r\n      text: 'Actions',\r\n      formatter: (cell, row) => {\r\n        return (\r\n          <div>\r\n            <Button color=\"primary\" size=\"sm\" onClick={() => handleEditClient(row)}>\r\n              <i className=\"fas fa-pencil-alt\" />\r\n            </Button>\r\n            {' '}\r\n            <Button color=\"danger\" size=\"sm\" onClick={() => handleDeleteClient(row._id)}>\r\n              <i className=\"fas fa-trash\" />\r\n            </Button>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  ];\r\n\r\n  const handleEditClient = (client) => {\r\n    history.push({\r\n      pathname: '/admin/nouveauClient',\r\n      state: { client: client }\r\n    });\r\n  };\r\n\r\n  const handleDeleteClient = (clientId) => {\r\n    if (window.confirm(\"Êtes-vous sûr de vouloir supprimer ce client ?\")) {\r\n      fetch(`http://localhost:5100/api/clients/${clientId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n        }\r\n      })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error('Failed to delete client');\r\n          }\r\n          return response.json();\r\n        })\r\n        .then(data => {\r\n          if (data.success) {\r\n            setClients(prevClients => prevClients.filter(client => client._id !== clientId));\r\n            setTotalClients(prevTotal => prevTotal - 1);\r\n            toast.success(\"Client deleted successfully!\");\r\n          } else {\r\n            console.error('Failed to delete client:', data.message);\r\n            toast.error(\"Failed to delete client: \" + data.message);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n          toast.error(\"Error: \" + error.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = () => {\r\n    if (!selectedFile) {\r\n      toast.warn(\"No file selected for upload.\");\r\n      return;\r\n    }\r\n\r\n    setIsUploading(true);\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    fetch('http://localhost:5100/api/clients/import', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n      },\r\n      body: formData\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to upload file');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setUploadSuccess(true);\r\n        console.log(\"Import success:\", data);\r\n        fetchClients(setClients);\r\n        setIsUploading(false);\r\n        \r\n        setSelectedFile(null);\r\n        toast.success(\"File imported successfully!\");\r\n        toggleModal(); // Ferme le modal après l'importation réussie\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Import error:\", err);\r\n        setIsUploading(false);\r\n        setUploadError(\"Error during import: \" + err.message);\r\n        toast.error(\"Error during import: \" + err.message);\r\n      });\r\n      setUploadSuccess(false);\r\n  };\r\n\r\n  const pagination = paginationFactory({\r\n    page: 1,\r\n    alwaysShowAllBtns: true,\r\n    withFirstAndLast: false,\r\n    sizePerPageRenderer: ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          {\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={e => onSizePerPageChange(e.target.value)}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n          }{\" \"}\r\n        </label>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  const { SearchBar } = Search;\r\n  useEffect(() => {\r\n    fetchClients(setClients);\r\n  }, []);\r\n  \r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop: acceptedFiles => {\r\n      console.log(acceptedFiles);\r\n      setSelectedFile(acceptedFiles[0]);\r\n      setUploadSuccess(true);\r\n      setUploadError(\"\");\r\n      //toast.info(\"File selected for upload.\");\r\n    }\r\n  });\r\n\r\n  const sendEmailsToSelected = () => {\r\n    const selectedClients = clients.filter(client => selected.includes(client.id));\r\n    console.log(\"Sending emails to:\", selectedClients.map(c => c.email));\r\n    // Logique pour envoyer des emails\r\n  };\r\n\r\n  const handleSelectAllClick = () => {\r\n    if (selected.length < clients.length) {\r\n      setSelected(clients.map(x => x.id));\r\n    } else {\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <ToastContainer position=\"bottom-left\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0 d-flex align-items-center justify-content-between\">\r\n                <div>\r\n                  <h3 className=\"mb-0\" style={{ paddingBottom: '10px' }}>Clients (Total : {totalClients})</h3>\r\n                  {/* <Button color=\"info\" onClick={handleSelectAllClick}>Sélectionner Tout</Button> */}\r\n                </div>\r\n                <div>\r\n                  <Button color=\"primary\" onClick={handleAddClient} style={{ marginRight: '10px' }}>Ajouter Client</Button>\r\n                  <Button color=\"info\" onClick={toggleModal}>Importer Clients</Button>\r\n                  <Button color=\"info\" onClick={sendEmailsToSelected}>Envoyer Mail</Button>\r\n                </div>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider keyField=\"id\" data={clients} columns={columns} search>\r\n                  {props => (\r\n                    <div>\r\n                      <SearchBar {...props.searchProps} style={{ border: '1px solid black' }} />\r\n                      <div style={{ overflowX: 'auto' }}>\r\n                        <BootstrapTable\r\n                          keyField=\"id\"\r\n                          data={clients}\r\n                          columns={columns}\r\n                          selectRow={selectRow}\r\n                          bootstrap4\r\n                          pagination={pagination}\r\n                          bordered={false}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n      <Modal isOpen={modal} toggle={toggleModal}>\r\n        <ModalHeader toggle={toggleModal}>Importer des fichiers</ModalHeader>\r\n        <ModalBody>\r\n          <div {...getRootProps({ className: 'dropzone' })} style={{ border: '2px dashed #007bff', padding: '20px', textAlign: 'center' }}>\r\n            <input {...getInputProps()} />\r\n            <i className=\"fas fa-file-upload fa-2x\"></i>\r\n            <p>Formats supportés : .csv, .xlsx</p>\r\n            {isDragActive ? (\r\n              <p>Relâchez le fichier ici...</p>\r\n            ) : (\r\n              <p>Glissez-déposez des fichiers ici, ou cliquez pour sélectionner des fichiers</p>\r\n            )}\r\n            {isUploading && <div>Chargement...</div>}\r\n            {uploadSuccess && <div className=\"alert alert-success\">Fichier importé avec succès!</div>}\r\n            {uploadError && <div className=\"alert alert-danger\">{uploadError}</div>}\r\n          </div>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={handleFileUpload} disabled={!selectedFile}>\r\n            OK\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={toggleModal}>Fermer</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\views\\examples\\NouveauClient.js",["138"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Button, Card, CardBody, CardHeader, Form, FormGroup, Input, Label, Container, Row, Col, UncontrolledAlert,\r\n  Nav, NavItem, NavLink, TabContent, TabPane\r\n} from \"reactstrap\";\r\nimport classnames from 'classnames';\r\n\r\nfunction formatDate(dateString) {\r\n  const date = new Date(dateString);\r\n  const year = date.getFullYear();\r\n  const month = ('0' + (date.getMonth() + 1)).slice(-2);\r\n  const day = ('0' + date.getDate()).slice(-2);\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nconst NouveauClient = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [client, setClient] = useState({\r\n    nom: \"\",\r\n    prenom: \"\",\r\n    dateNaissance: \"\",\r\n    mutuelle: \"\",\r\n    numeroSecu: \"\",\r\n    email: \"\",\r\n    telephoneFixe: \"\",\r\n    telephonePortable: \"\",\r\n    adresse: \"\",\r\n    codePostal: \"\",\r\n    ville: \"\",\r\n    note: \"\",\r\n    audiogramme: \"\" \r\n  });\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [audiogrammeSuccessMessage, setAudiogrammeSuccessMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Si un client est passé dans l'état, utilisez ses valeurs pour initialiser le formulaire\r\n    if (location.state && location.state.client) {\r\n      const formattedClient = {\r\n        ...location.state.client,\r\n        dateNaissance: formatDate(location.state.client.dateNaissance)\r\n      };\r\n      setClient(formattedClient);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const toggleTab = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  const isMounted = useRef(false);\r\n\r\nuseEffect(() => {\r\n  isMounted.current = true;\r\n  return () => {\r\n    isMounted.current = false;  // Nettoyage en démontant le composant\r\n  };\r\n}, []);\r\n\r\n  const validateForm = () => {\r\n    let tempErrors = {};\r\n    let formIsValid = true;\r\n\r\n    if (!client.nom.trim()) {\r\n      formIsValid = false;\r\n      tempErrors[\"nom\"] = \"Le nom est requis.\";\r\n    }\r\n\r\n    if (!client.email.trim()) {\r\n      formIsValid = false;\r\n      tempErrors[\"email\"] = \"L'email est requis.\";\r\n    }\r\n\r\n    setErrors(tempErrors);\r\n    return formIsValid;\r\n  };\r\n\r\n  const saveClient = async (clientData) => {\r\n    const url = clientData._id ? `http://localhost:5100/api/clients/${clientData._id}` : 'http://localhost:5100/api/clients/add';\r\n    const method = clientData._id ? 'PUT' : 'POST';\r\n\r\n    try {\r\n        const response = await fetch(url, {\r\n            method: method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify(clientData)\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const data = await response.json();\r\n            if (response.status === 409) {\r\n                alert(data.message); // Utiliser alert pour montrer le message d'erreur\r\n                // Vous pouvez également utiliser un autre type de notification selon votre UX\r\n            } else {\r\n                throw new Error(data.message);\r\n            }\r\n        } else {\r\n            const data = await response.json();\r\n            setSuccessMessage(\"Le client a été ajouté/modifié avec succès !\");\r\n            setTimeout(() => {\r\n                history.push('/admin/clients');\r\n            }, 3000);\r\n        }\r\n    } catch (error) {\r\n        console.error('Erreur lors de l\\'opération sur le client:', error);\r\n        setErrors({ form: \"Erreur lors de l'opération sur le client.\" });\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setClient({ ...client, [name]: value });\r\n    // Clear errors\r\n    if (!!errors[name]) setErrors({ ...errors, [name]: null });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      saveClient(client);\r\n    }\r\n  };\r\n  const handleSubmitAudiogramme = async (e) => {\r\n    e.preventDefault();\r\n    const audiogrammeData = {\r\n      ...client,\r\n      audiogramme: client.audiogramme\r\n    };\r\n  \r\n    const url = client._id ? `http://localhost:5100/api/clients/${client._id}` : 'http://localhost:5100/api/clients/add';\r\n    const method = client._id ? 'PUT' : 'POST';\r\n  \r\n    try {\r\n      const response = await fetch(url, {\r\n        method: method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': localStorage.getItem('token')\r\n        },\r\n        body: JSON.stringify(audiogrammeData)\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`HTTP status ${response.status}: ${errorText}`);\r\n      }\r\n  \r\n      const data = await response.json();\r\n      console.log('Opération réussie:', data);\r\n      setAudiogrammeSuccessMessage(\"Le bilan auditif a été enregistré avec succès.\");\r\n      setTimeout(() => {\r\n        setAudiogrammeSuccessMessage(\"\");\r\n        history.push('/admin/clients'); // Redirection après l'affichage du message de succès\r\n      }, 3000); // Affichage du message pendant 3 secondes\r\n  \r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'enregistrement du bilan auditif:\", error);\r\n      setErrors({ form: \"Erreur lors de l'opération sur le bilan auditif.\" });\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div style={{ paddingTop: '50px' }}>\r\n    <Container className=\"mt-5\">\r\n      <Card>\r\n      <CardHeader className=\"bg-white text-white\">\r\n            <h4 className=\"mb-0\">{client._id ? \"Modifier Client\" : \"Ajouter Nouveau Client\"}</h4>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Nav tabs>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === '1' })}\r\n                  onClick={() => { toggleTab('1'); }}\r\n                >\r\n                  Informations Générales\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === '2' })}\r\n                  onClick={() => { toggleTab('2'); }}\r\n                >\r\n                  Bilan Auditif\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"1\">\r\n              {/* Votre formulaire existant ici */}\r\n              {successMessage && (\r\n                <UncontrolledAlert color=\"success\" className=\"fixed-alert\" style={{ position: 'fixed', top: 0, left: 0, right: 0, zIndex: 1050 }} fade={false}>\r\n                  <span className=\"alert-inner--icon\">\r\n                    <i className=\"ni ni-like-2\" />\r\n                  </span>\r\n                  <span className=\"alert-inner--text\">\r\n                    <strong>Succès!</strong> {successMessage}\r\n                  </span>\r\n                </UncontrolledAlert>\r\n              )}\r\n              <Form onSubmit={handleSubmit}>\r\n              <Row form style={{ paddingTop: '50px' }}>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"nom\">Nom</Label>\r\n                    <Input type=\"text\" name=\"nom\" id=\"nom\" value={client.nom} onChange={handleInputChange} required />\r\n                    {errors.nom && <p style={{ color: 'red' }}>{errors.nom}</p>}\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"prenom\">Prénom</Label>\r\n                    <Input type=\"text\" name=\"prenom\" id=\"prenom\" value={client.prenom} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={4}>\r\n                <FormGroup>\r\n                    <Label for=\"dateNaissance\">Date de Naissance</Label>\r\n                    <Input type=\"date\" name=\"dateNaissance\" id=\"dateNaissance\" value={client.dateNaissance || ''} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"mutuelle\">Mutuelle</Label>\r\n                    <Input type=\"text\" name=\"mutuelle\" id=\"mutuelle\" value={client.mutuelle} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <FormGroup>\r\n                    <Label for=\"numeroSecu\">Numéro de Sécurité Sociale</Label>\r\n                    <Input type=\"text\" name=\"numeroSecu\" id=\"numeroSecu\" value={client.numeroSecu} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"telephoneFixe\">Téléphone Fixe</Label>\r\n                    <Input type=\"text\" name=\"telephoneFixe\" id=\"telephoneFixe\" value={client.telephoneFixe} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"telephonePortable\">Téléphone Portable</Label>\r\n                    <Input type=\"text\" name=\"telephonePortable\" id=\"telephonePortable\" value={client.telephonePortable} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <FormGroup>\r\n                <Label for=\"adresse\">Adresse</Label>\r\n                <Input type=\"text\" name=\"adresse\" id=\"adresse\" value={client.adresse} onChange={handleInputChange} />\r\n              </FormGroup>\r\n              <Row form>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"codePostal\">Code Postal</Label>\r\n                    <Input type=\"text\" name=\"codePostal\" id=\"codePostal\" value={client.codePostal} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={6}>\r\n                  <FormGroup>\r\n                    <Label for=\"ville\">Ville</Label>\r\n                    <Input type=\"text\" name=\"ville\" id=\"ville\" value={client.ville} onChange={handleInputChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <FormGroup>\r\n                <Label for=\"email\">Email</Label>\r\n                <Input type=\"email\" name=\"email\" id=\"email\" value={client.email} onChange={handleInputChange} required />\r\n                {errors.email && <p style={{ color: 'red' }}>{errors.email}</p>}\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label for=\"note\">Note</Label>\r\n                <Input type=\"textarea\" name=\"note\" id=\"note\" value={client.note} onChange={handleInputChange} />\r\n              </FormGroup>\r\n                <Button type=\"submit\" color=\"primary\">Enregistrer</Button>\r\n                <Button type=\"button\" color=\"secondary\" onClick={() => history.push('/admin/clients')}>Annuler</Button>\r\n              </Form>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n  {audiogrammeSuccessMessage && (\r\n    <UncontrolledAlert color=\"success\" className=\"fixed-alert\" fade={false}>\r\n      <span className=\"alert-inner--icon\"><i className=\"ni ni-like-2\" /></span>\r\n      <span className=\"alert-inner--text\"><strong>Succès!</strong> {audiogrammeSuccessMessage}</span>\r\n    </UncontrolledAlert>\r\n  )}\r\n  <Form onSubmit={handleSubmitAudiogramme} style={{ paddingTop: '50px' }}>\r\n    <FormGroup>\r\n      <Label for=\"audiogramme\">Audiogramme</Label>\r\n      <Input type=\"text\" name=\"audiogramme\" id=\"audiogramme\" value={client.audiogramme} onChange={handleInputChange} />\r\n    </FormGroup>\r\n    {/* Ajoutez plus de champs selon vos besoins ici */}\r\n    <Button type=\"submit\" color=\"primary\">Enregistrer Bilan</Button>\r\n  </Form>\r\n</TabPane>\r\n\r\n          </TabContent>\r\n        </CardBody>\r\n      </Card>\r\n      \r\n    </Container>\r\n    \r\n    </div>\r\n  );\r\n}\r\n  \r\n\r\nexport default NouveauClient;\r\n","C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\config.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\Header.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\UserHeader.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\components\\Headers\\EditHeader.js",[],"C:\\Users\\Esther Elbaz\\Desktop\\Projet Code\\Ouieqare-MERN - Copie\\front-end\\src\\variables\\charts.js",[],["139","140"],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":2,"column":27,"nodeType":"147","messageId":"148","endLine":2,"endColumn":33},{"ruleId":"145","severity":1,"message":"149","line":272,"column":9,"nodeType":"147","messageId":"148","endLine":272,"endColumn":29},{"ruleId":"145","severity":1,"message":"150","line":106,"column":19,"nodeType":"147","messageId":"148","endLine":106,"endColumn":23},{"ruleId":"141","replacedBy":"151"},{"ruleId":"143","replacedBy":"152"},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'handleSelectAllClick' is assigned a value but never used.","'data' is assigned a value but never used.",["153"],["154"],"no-global-assign","no-unsafe-negation"]