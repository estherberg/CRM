{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Projet Code\\\\Ouieqare-MERN - Copie\\\\front-end\\\\src\\\\views\\\\examples\\\\NouveauClient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Button, Card, CardBody, CardHeader, Form, FormGroup, Input, Label, Container, Row, Col, UncontrolledAlert, Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\nimport classnames from 'classnames';\n\nfunction formatDate(dateString) {\n  var date = new Date(dateString);\n  var year = date.getFullYear();\n  var month = ('0' + (date.getMonth() + 1)).slice(-2);\n  var day = ('0' + date.getDate()).slice(-2);\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n}\n\nvar NouveauClient = function NouveauClient() {\n  _s();\n\n  var history = useHistory();\n  var location = useLocation();\n\n  var _useState = useState({\n    nom: \"\",\n    prenom: \"\",\n    dateNaissance: \"\",\n    mutuelle: \"\",\n    numeroSecu: \"\",\n    email: \"\",\n    telephoneFixe: \"\",\n    telephonePortable: \"\",\n    adresse: \"\",\n    codePostal: \"\",\n    ville: \"\",\n    note: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      client = _useState2[0],\n      setClient = _useState2[1];\n\n  var _useState3 = useState('1'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeTab = _useState4[0],\n      setActiveTab = _useState4[1];\n\n  useEffect(function () {\n    // Si un client est passé dans l'état, utilisez ses valeurs pour initialiser le formulaire\n    if (location.state && location.state.client) {\n      var formattedClient = _objectSpread(_objectSpread({}, location.state.client), {}, {\n        dateNaissance: formatDate(location.state.client.dateNaissance)\n      });\n\n      setClient(formattedClient);\n    }\n  }, [location.state]);\n\n  var toggleTab = function toggleTab(tab) {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errors = _useState6[0],\n      setErrors = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      successMessage = _useState8[0],\n      setSuccessMessage = _useState8[1];\n\n  var isMounted = useRef(false);\n  useEffect(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false; // Nettoyage en démontant le composant\n    };\n  }, []);\n\n  var validateForm = function validateForm() {\n    var tempErrors = {};\n    var formIsValid = true;\n\n    if (!client.nom.trim()) {\n      formIsValid = false;\n      tempErrors[\"nom\"] = \"Le nom est requis.\";\n    }\n\n    if (!client.email.trim()) {\n      formIsValid = false;\n      tempErrors[\"email\"] = \"L'email est requis.\";\n    }\n\n    setErrors(tempErrors);\n    return formIsValid;\n  };\n\n  var saveClient = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(clientData) {\n      var isEditing, url, method, successMsg, response, errorText, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              isEditing = !!clientData._id;\n              url = isEditing ? \"http://localhost:5100/api/clients/\".concat(clientData._id) : 'http://localhost:5100/api/clients/add';\n              method = isEditing ? 'PUT' : 'POST';\n              successMsg = isEditing ? \"Le client a été modifié avec succès !\" : \"Le client a été ajouté avec succès !\";\n              _context.prev = 4;\n              _context.next = 7;\n              return fetch(url, {\n                method: method,\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': localStorage.getItem('token')\n                },\n                body: JSON.stringify(clientData)\n              });\n\n            case 7:\n              response = _context.sent;\n\n              if (response.ok) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 11;\n              return response.text();\n\n            case 11:\n              errorText = _context.sent;\n              throw new Error(\"HTTP status \".concat(response.status, \": \").concat(errorText));\n\n            case 13:\n              _context.next = 15;\n              return response.json();\n\n            case 15:\n              data = _context.sent;\n              console.log('Opération réussie:', data);\n\n              if (isMounted.current) {\n                setSuccessMessage(successMsg);\n                setTimeout(function () {\n                  if (isMounted.current) {\n                    setSuccessMessage(\"\");\n                    history.push('/admin/clients'); // Rediriger après que le message ait disparu\n                  }\n                }, 5000); // Affiche le message pendant 5 secondes puis redirige\n              }\n\n              _context.next = 24;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](4);\n              console.error('Erreur lors de la connexion au serveur', _context.t0);\n\n              if (isMounted.current) {\n                setErrors({\n                  form: \"Erreur lors de l'opération sur le client.\"\n                });\n              }\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 20]]);\n    }));\n\n    return function saveClient(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setClient(_objectSpread(_objectSpread({}, client), {}, {\n      [name]: value\n    })); // Clear errors\n\n    if (!!errors[name]) setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n      [name]: null\n    }));\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n\n    if (validateForm()) {\n      saveClient(client);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    tabs: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '1'\n    }),\n    onClick: function onClick() {\n      toggleTab('1');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, \"Informations G\\xE9n\\xE9rales\")), /*#__PURE__*/React.createElement(NavItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: classnames({\n      active: activeTab === '2'\n    }),\n    onClick: function onClick() {\n      toggleTab('2');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Bilan Auditif\")))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TabContent, {\n    activeTab: activeTab,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, successMessage && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n    color: \"success\",\n    className: \"fixed-alert\",\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      zIndex: 1050\n    },\n    fade: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"alert-inner--icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"ni ni-like-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"alert-inner--text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, \"Succ\\xE8s!\"), \" \", successMessage)), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, \"Enregistrer\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"secondary\",\n    onClick: function onClick() {\n      return history.push('/admin/clients');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, \"Annuler\"))), /*#__PURE__*/React.createElement(TabPane, {\n    tabId: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"audiogramme\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }\n  }, \"Audiogramme\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"audiogramme\",\n    id: \"audiogramme\",\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, \"Enregistrer Bilan\")))))));\n};\n\n_s(NouveauClient, \"p8NpvmVHvLXjNBfgOlN/m0FvmuQ=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = NouveauClient;\nexport default NouveauClient;\n\nvar _c;\n\n$RefreshReg$(_c, \"NouveauClient\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/src/views/examples/NouveauClient.js"],"names":["React","useState","useRef","useEffect","useHistory","useLocation","Button","Card","CardBody","CardHeader","Form","FormGroup","Input","Label","Container","Row","Col","UncontrolledAlert","Nav","NavItem","NavLink","TabContent","TabPane","classnames","formatDate","dateString","date","Date","year","getFullYear","month","getMonth","slice","day","getDate","NouveauClient","history","location","nom","prenom","dateNaissance","mutuelle","numeroSecu","email","telephoneFixe","telephonePortable","adresse","codePostal","ville","note","client","setClient","activeTab","setActiveTab","state","formattedClient","toggleTab","tab","errors","setErrors","successMessage","setSuccessMessage","isMounted","current","validateForm","tempErrors","formIsValid","trim","saveClient","clientData","isEditing","_id","url","method","successMsg","fetch","headers","localStorage","getItem","body","JSON","stringify","response","ok","text","errorText","Error","status","json","data","console","log","setTimeout","push","error","form","handleInputChange","e","target","name","value","handleSubmit","preventDefault","active","position","top","left","right","zIndex"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  Button, Card, CardBody, CardHeader, Form, FormGroup, Input, Label, Container, Row, Col, UncontrolledAlert,\r\n  Nav, NavItem, NavLink, TabContent, TabPane\r\n} from \"reactstrap\";\r\nimport classnames from 'classnames';\r\n\r\nfunction formatDate(dateString) {\r\n  const date = new Date(dateString);\r\n  const year = date.getFullYear();\r\n  const month = ('0' + (date.getMonth() + 1)).slice(-2);\r\n  const day = ('0' + date.getDate()).slice(-2);\r\n  return `${year}-${month}-${day}`;\r\n}\r\n\r\nconst NouveauClient = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [client, setClient] = useState({\r\n    nom: \"\",\r\n    prenom: \"\",\r\n    dateNaissance: \"\",\r\n    mutuelle: \"\",\r\n    numeroSecu: \"\",\r\n    email: \"\",\r\n    telephoneFixe: \"\",\r\n    telephonePortable: \"\",\r\n    adresse: \"\",\r\n    codePostal: \"\",\r\n    ville: \"\",\r\n    note: \"\"\r\n  });\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  useEffect(() => {\r\n    // Si un client est passé dans l'état, utilisez ses valeurs pour initialiser le formulaire\r\n    if (location.state && location.state.client) {\r\n      const formattedClient = {\r\n        ...location.state.client,\r\n        dateNaissance: formatDate(location.state.client.dateNaissance)\r\n      };\r\n      setClient(formattedClient);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const toggleTab = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  const isMounted = useRef(false);\r\n\r\nuseEffect(() => {\r\n  isMounted.current = true;\r\n  return () => {\r\n    isMounted.current = false;  // Nettoyage en démontant le composant\r\n  };\r\n}, []);\r\n\r\n  const validateForm = () => {\r\n    let tempErrors = {};\r\n    let formIsValid = true;\r\n\r\n    if (!client.nom.trim()) {\r\n      formIsValid = false;\r\n      tempErrors[\"nom\"] = \"Le nom est requis.\";\r\n    }\r\n\r\n    if (!client.email.trim()) {\r\n      formIsValid = false;\r\n      tempErrors[\"email\"] = \"L'email est requis.\";\r\n    }\r\n\r\n    setErrors(tempErrors);\r\n    return formIsValid;\r\n  };\r\n\r\n  const saveClient = async (clientData) => {\r\n    const isEditing = !!clientData._id;\r\n    const url = isEditing ? `http://localhost:5100/api/clients/${clientData._id}` : 'http://localhost:5100/api/clients/add';\r\n    const method = isEditing ? 'PUT' : 'POST';\r\n    const successMsg = isEditing ? \"Le client a été modifié avec succès !\" : \"Le client a été ajouté avec succès !\";\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: method,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': localStorage.getItem('token')\r\n      },\r\n      body: JSON.stringify(clientData)\r\n    });\r\n      \r\n  \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`HTTP status ${response.status}: ${errorText}`);\r\n      }\r\n  \r\n      const data = await response.json();\r\n    console.log('Opération réussie:', data);\r\n    if (isMounted.current) {\r\n      setSuccessMessage(successMsg);\r\n      setTimeout(() => {\r\n        if (isMounted.current) {\r\n          setSuccessMessage(\"\");\r\n          history.push('/admin/clients'); // Rediriger après que le message ait disparu\r\n        }\r\n      }, 5000); // Affiche le message pendant 5 secondes puis redirige\r\n    }\r\n  } catch (error) {\r\n    console.error('Erreur lors de la connexion au serveur', error);\r\n    if (isMounted.current) {\r\n      setErrors({ form: \"Erreur lors de l'opération sur le client.\" });\r\n    }\r\n  }\r\n};\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setClient({ ...client, [name]: value });\r\n    // Clear errors\r\n    if (!!errors[name]) setErrors({ ...errors, [name]: null });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      saveClient(client);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Card>\r\n        <CardHeader>\r\n          <Nav tabs>\r\n            <NavItem>\r\n              <NavLink\r\n                className={classnames({ active: activeTab === '1' })}\r\n                onClick={() => { toggleTab('1'); }}\r\n              >\r\n                Informations Générales\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink\r\n                className={classnames({ active: activeTab === '2' })}\r\n                onClick={() => { toggleTab('2'); }}\r\n              >\r\n                Bilan Auditif\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <TabContent activeTab={activeTab}>\r\n            <TabPane tabId=\"1\">\r\n              {/* Votre formulaire existant ici */}\r\n              {successMessage && (\r\n                <UncontrolledAlert color=\"success\" className=\"fixed-alert\" style={{ position: 'fixed', top: 0, left: 0, right: 0, zIndex: 1050 }} fade={false}>\r\n                  <span className=\"alert-inner--icon\">\r\n                    <i className=\"ni ni-like-2\" />\r\n                  </span>\r\n                  <span className=\"alert-inner--text\">\r\n                    <strong>Succès!</strong> {successMessage}\r\n                  </span>\r\n                </UncontrolledAlert>\r\n              )}\r\n              <Form onSubmit={handleSubmit}>\r\n                {/* Tous les champs déjà définis */}\r\n                {/* Reste du formulaire ici */}\r\n                <Button type=\"submit\" color=\"primary\">Enregistrer</Button>\r\n                <Button type=\"button\" color=\"secondary\" onClick={() => history.push('/admin/clients')}>Annuler</Button>\r\n              </Form>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              <Form>\r\n                <FormGroup>\r\n                  <Label for=\"audiogramme\">Audiogramme</Label>\r\n                  <Input type=\"text\" name=\"audiogramme\" id=\"audiogramme\" onChange={handleInputChange} />\r\n                </FormGroup>\r\n                {/* Ajoutez plus de champs selon vos besoins ici */}\r\n                <Button type=\"submit\" color=\"primary\">Enregistrer Bilan</Button>\r\n              </Form>\r\n            </TabPane>\r\n          </TabContent>\r\n        </CardBody>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NouveauClient;\r\n"]},"metadata":{},"sourceType":"module"}