{"ast":null,"code":"import _toConsumableArray from \"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Projet Code\\\\Ouieqare-MERN - Copie\\\\front-end\\\\src\\\\views\\\\examples\\\\Clients.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Button, ButtonGroup, Card, Col, CardHeader, CardFooter, Container, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Pagination, PaginationItem, PaginationLink, Row, UncontrolledTooltip } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory, { PaginationProvider, PaginationTotalStandalone, PaginationListStandalone } from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport Header from \"components/Headers/Header.js\";\nimport { dataTable } from \"variables/general\";\n\nvar AddClientModal = function AddClientModal(_ref) {\n  _s();\n\n  var isOpen = _ref.isOpen,\n      toggle = _ref.toggle,\n      onSave = _ref.onSave;\n\n  var _useState = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      client = _useState2[0],\n      setClient = _useState2[1];\n\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setClient(_objectSpread(_objectSpread({}, client), {}, {\n      [name]: value\n    }));\n  };\n\n  var handleSubmit = function handleSubmit() {\n    onSave(client);\n    toggle();\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Ajouter un nouveau client\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"clientName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Nom\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"name\",\n    id: \"clientName\",\n    placeholder: \"Nom du client\",\n    value: client.name,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"clientEmail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"clientEmail\",\n    placeholder: \"Email du client\",\n    value: client.email,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"clientPhone\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"T\\xE9l\\xE9phone\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"phone\",\n    id: \"clientPhone\",\n    placeholder: \"T\\xE9l\\xE9phone du client\",\n    value: client.phone,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Enregistrer\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Annuler\")));\n};\n\n_s(AddClientModal, \"M3HsheFLjc6lpa7NdAt/HTB5Fyc=\");\n\n_c = AddClientModal;\n\nvar Tables = function Tables() {\n  _s2();\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modal = _useState4[0],\n      setModal = _useState4[1];\n\n  var toggleModal = function toggleModal() {\n    return setModal(!modal);\n  };\n\n  var _useState5 = useState(dataTable),\n      _useState6 = _slicedToArray(_useState5, 2),\n      clients = _useState6[0],\n      setClients = _useState6[1];\n\n  var componentRef = useRef(null);\n\n  var addNewClient = function addNewClient(client) {\n    setClients([].concat(_toConsumableArray(clients), [_objectSpread(_objectSpread({}, client), {}, {\n      position: \"New Position\",\n      office: \"New Office\",\n      age: \"N/A\",\n      start_date: \"N/A\",\n      salary: \"N/A\"\n    })]));\n  };\n\n  var copyToClipboardAsTable = function copyToClipboardAsTable() {\n    navigator.clipboard.writeText(JSON.stringify(clients)).then(function () {\n      alert('Copied to clipboard successfully!');\n    }).catch(function (err) {\n      alert('Failed to copy: ', err);\n    });\n  };\n\n  var paginationOptions = {\n    custom: true,\n    paginationSize: 4,\n    pageStartIndex: 1,\n    firstPageText: 'First',\n    prePageText: 'Back',\n    nextPageText: 'Next',\n    lastPageText: 'Last',\n    nextPageTitle: 'First page',\n    prePageTitle: 'Pre page',\n    firstPageTitle: 'Next page',\n    lastPageTitle: 'Last page',\n    showTotal: true,\n    disablePageTitle: true,\n    sizePerPageList: [{\n      text: '10',\n      value: 10\n    }, {\n      text: '25',\n      value: 25\n    }, {\n      text: 'All',\n      value: clients.length\n    }]\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"mt--7\",\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Client tables\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: toggleModal,\n    style: {\n      float: \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Ajouter Client\")), /*#__PURE__*/React.createElement(ToolkitProvider, {\n    keyField: \"name\",\n    data: clients,\n    columns: [{\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true\n    }, {\n      dataField: \"email\",\n      text: \"Email\",\n      sort: true\n    }, {\n      dataField: \"phone\",\n      text: \"Phone\",\n      sort: true\n    }, {\n      dataField: \"position\",\n      text: \"Position\",\n      sort: true\n    }, {\n      dataField: \"office\",\n      text: \"Office\",\n      sort: true\n    }, {\n      dataField: \"age\",\n      text: \"Age\",\n      sort: true\n    }, {\n      dataField: \"start_date\",\n      text: \"Start Date\",\n      sort: true\n    }, {\n      dataField: \"salary\",\n      text: \"Salary\",\n      sort: true\n    }],\n    search: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"buttons-copy buttons-html5\",\n      color: \"default\",\n      size: \"sm\",\n      id: \"copy-tooltip\",\n      onClick: copyToClipboardAsTable,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, \"Copy\")), /*#__PURE__*/React.createElement(ReactToPrint, {\n      trigger: function trigger() {\n        return /*#__PURE__*/React.createElement(Button, {\n          color: \"info\",\n          size: \"sm\",\n          className: \"buttons-copy buttons-html5\",\n          id: \"print-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 35\n          }\n        }, \"Print\");\n      },\n      content: function content() {\n        return componentRef.current;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      sm: 6,\n      className: \"text-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, props.searchProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({\n      ref: componentRef\n    }, props.baseProps, {\n      bootstrap4: true,\n      pagination: pagination,\n      bordered: false,\n      id: \"react-bs-table\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(PaginationListStandalone, Object.assign({}, props.paginationProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 23\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(CardFooter, {\n    className: \"py-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PaginationProvider, {\n    pagination: paginationFactory(paginationOptions),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, function (_ref2) {\n    var paginationProps = _ref2.paginationProps,\n        paginationTableProps = _ref2.paginationTableProps;\n    return /*#__PURE__*/React.createElement(PaginationListStandalone, Object.assign({}, paginationProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }));\n  })))))), /*#__PURE__*/React.createElement(AddClientModal, {\n    isOpen: modal,\n    toggle: toggleModal,\n    onSave: addNewClient,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s2(Tables, \"eReoekqkxV+231KXLaz5sl2X4/s=\");\n\n_c2 = Tables;\nexport default Tables;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddClientModal\");\n$RefreshReg$(_c2, \"Tables\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/src/views/examples/Clients.js"],"names":["React","useState","useRef","Button","ButtonGroup","Card","Col","CardHeader","CardFooter","Container","FormGroup","Input","Label","Modal","ModalBody","ModalFooter","ModalHeader","Pagination","PaginationItem","PaginationLink","Row","UncontrolledTooltip","ReactToPrint","BootstrapTable","paginationFactory","PaginationProvider","PaginationTotalStandalone","PaginationListStandalone","ToolkitProvider","Search","Header","dataTable","AddClientModal","isOpen","toggle","onSave","name","email","phone","client","setClient","handleInputChange","e","target","value","handleSubmit","Tables","modal","setModal","toggleModal","clients","setClients","componentRef","addNewClient","position","office","age","start_date","salary","copyToClipboardAsTable","navigator","clipboard","writeText","JSON","stringify","then","alert","catch","err","paginationOptions","custom","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","disablePageTitle","sizePerPageList","text","length","float","dataField","sort","props","current","searchProps","baseProps","pagination","paginationProps","paginationTableProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Col,\r\n  CardHeader,\r\n  CardFooter,\r\n  Container,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Row,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory, { PaginationProvider, PaginationTotalStandalone, PaginationListStandalone } from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport { dataTable } from \"variables/general\";\r\n\r\nconst AddClientModal = ({ isOpen, toggle, onSave }) => {\r\n  const [client, setClient] = useState({ name: \"\", email: \"\", phone: \"\" });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setClient({ ...client, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onSave(client);\r\n    toggle();\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={toggle}>\r\n      <ModalHeader toggle={toggle}>Ajouter un nouveau client</ModalHeader>\r\n      <ModalBody>\r\n        <FormGroup>\r\n          <Label for=\"clientName\">Nom</Label>\r\n          <Input type=\"text\" name=\"name\" id=\"clientName\" placeholder=\"Nom du client\" value={client.name} onChange={handleInputChange} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"clientEmail\">Email</Label>\r\n          <Input type=\"email\" name=\"email\" id=\"clientEmail\" placeholder=\"Email du client\" value={client.email} onChange={handleInputChange} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"clientPhone\">Téléphone</Label>\r\n          <Input type=\"text\" name=\"phone\" id=\"clientPhone\" placeholder=\"Téléphone du client\" value={client.phone} onChange={handleInputChange} />\r\n        </FormGroup>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"primary\" onClick={handleSubmit}>Enregistrer</Button>\r\n        <Button color=\"secondary\" onClick={toggle}>Annuler</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst Tables = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const toggleModal = () => setModal(!modal);\r\n  const [clients, setClients] = useState(dataTable);\r\n  const componentRef = useRef(null);\r\n\r\n  const addNewClient = (client) => {\r\n    setClients([...clients, { ...client, position: \"New Position\", office: \"New Office\", age: \"N/A\", start_date: \"N/A\", salary: \"N/A\" }]);\r\n  };\r\n\r\n  const copyToClipboardAsTable = () => {\r\n    navigator.clipboard.writeText(JSON.stringify(clients))\r\n      .then(() => {\r\n        alert('Copied to clipboard successfully!');\r\n      })\r\n      .catch(err => {\r\n        alert('Failed to copy: ', err);\r\n      });\r\n  };\r\n\r\n  const paginationOptions = {\r\n    custom: true,\r\n    paginationSize: 4,\r\n    pageStartIndex: 1,\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [{\r\n      text: '10', value: 10\r\n    }, {\r\n      text: '25', value: 25\r\n    }, {\r\n      text: 'All', value: clients.length\r\n    }]\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <h3 className=\"mb-0\">Client tables</h3>\r\n                <Button color=\"primary\" onClick={toggleModal} style={{ float: \"right\" }}>Ajouter Client</Button>\r\n              </CardHeader>\r\n              <ToolkitProvider\r\n                keyField=\"name\"\r\n                data={clients}\r\n                columns={[\r\n                  { dataField: \"name\", text: \"Name\", sort: true },\r\n                  { dataField: \"email\", text: \"Email\", sort: true },\r\n                  { dataField: \"phone\", text: \"Phone\", sort: true },\r\n                  { dataField: \"position\", text: \"Position\", sort: true },\r\n                  { dataField: \"office\", text: \"Office\", sort: true },\r\n                  { dataField: \"age\", text: \"Age\", sort: true },\r\n                  { dataField: \"start_date\", text: \"Start Date\", sort: true },\r\n                  { dataField: \"salary\", text: \"Salary\", sort: true }\r\n                ]}\r\n                search\r\n              >\r\n                {\r\n                  props => (\r\n                    <>\r\n                      <div className=\"p-4\">\r\n                        <Row>\r\n                          <Col xs={12} sm={6}>\r\n                            <ButtonGroup>\r\n                              <Button\r\n                                className=\"buttons-copy buttons-html5\"\r\n                                color=\"default\"\r\n                                size=\"sm\"\r\n                                id=\"copy-tooltip\"\r\n                                onClick={copyToClipboardAsTable}\r\n                              >\r\n                                <span>Copy</span>\r\n                              </Button>\r\n                              <ReactToPrint\r\n                                trigger={() => (\r\n                                  <Button\r\n                                    color=\"info\"\r\n                                    size=\"sm\"\r\n                                    className=\"buttons-copy buttons-html5\"\r\n                                    id=\"print-tooltip\"\r\n                                  >\r\n                                    Print\r\n                                  </Button>\r\n                                )}\r\n                                content={() => componentRef.current}\r\n                              />\r\n                            </ButtonGroup>\r\n                          </Col>\r\n                          <Col xs={12} sm={6} className=\"text-right\">\r\n                            <SearchBar {...props.searchProps} />\r\n                          </Col>\r\n                        </Row>\r\n                        <BootstrapTable\r\n                          ref={componentRef}\r\n                          {...props.baseProps}\r\n                          bootstrap4\r\n                          pagination={pagination}\r\n                          bordered={false}\r\n                          id=\"react-bs-table\"\r\n                        />\r\n                      </div>\r\n                      <PaginationListStandalone\r\n                        {...props.paginationProps}\r\n                      />\r\n                    </>\r\n                  )\r\n                }\r\n              </ToolkitProvider>\r\n              <CardFooter className=\"py-4\">\r\n                <PaginationProvider pagination={paginationFactory(paginationOptions)}>\r\n                  {({ paginationProps, paginationTableProps }) => (\r\n                    <PaginationListStandalone {...paginationProps} />\r\n                  )}\r\n                </PaginationProvider>\r\n              </CardFooter>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n      <AddClientModal isOpen={modal} toggle={toggleModal} onSave={addNewClient} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}