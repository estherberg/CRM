{"ast":null,"code":"import _toConsumableArray from \"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Projet Code\\\\Ouieqare-MERN - Copie\\\\front-end\\\\src\\\\views\\\\examples\\\\Clients.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Button, ButtonGroup, Card, Col, CardHeader, CardFooter, Container, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Pagination, PaginationItem, PaginationLink, Row, UncontrolledTooltip } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport ReactBSAlert from \"react-bootstrap-sweetalert\";\nimport Header from \"components/Headers/Header.js\";\nimport { dataTable } from \"variables/general\";\n\nvar AddClientModal = function AddClientModal(_ref) {\n  _s();\n\n  var isOpen = _ref.isOpen,\n      toggle = _ref.toggle,\n      onSave = _ref.onSave;\n\n  var _useState = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      client = _useState2[0],\n      setClient = _useState2[1];\n\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setClient(_objectSpread(_objectSpread({}, client), {}, {\n      [name]: value\n    }));\n  };\n\n  var handleSubmit = function handleSubmit() {\n    onSave(client);\n    toggle();\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Ajouter un nouveau client\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"clientName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Nom\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"name\",\n    id: \"clientName\",\n    placeholder: \"Nom du client\",\n    value: client.name,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"clientEmail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"clientEmail\",\n    placeholder: \"Email du client\",\n    value: client.email,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"clientPhone\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"T\\xE9l\\xE9phone\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"phone\",\n    id: \"clientPhone\",\n    placeholder: \"T\\xE9l\\xE9phone du client\",\n    value: client.phone,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Enregistrer\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Annuler\")));\n};\n\n_s(AddClientModal, \"M3HsheFLjc6lpa7NdAt/HTB5Fyc=\");\n\n_c = AddClientModal;\n\nvar Tables = function Tables() {\n  _s2();\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modal = _useState4[0],\n      setModal = _useState4[1];\n\n  var toggleModal = function toggleModal() {\n    return setModal(!modal);\n  };\n\n  var _useState5 = useState(dataTable),\n      _useState6 = _slicedToArray(_useState5, 2),\n      clients = _useState6[0],\n      setClients = _useState6[1];\n\n  var componentRef = useRef(null);\n\n  var addNewClient = function addNewClient(client) {\n    setClients([].concat(_toConsumableArray(clients), [_objectSpread(_objectSpread({}, client), {}, {\n      position: \"New Position\",\n      office: \"New Office\",\n      age: \"N/A\",\n      start_date: \"N/A\",\n      salary: \"N/A\"\n    })]));\n  };\n\n  var copyToClipboardAsTable = function copyToClipboardAsTable() {\n    navigator.clipboard.writeText(JSON.stringify(clients)).then(function () {\n      alert('Copied to clipboard successfully!');\n    }).catch(function (err) {\n      alert('Failed to copy: ', err);\n    });\n  };\n\n  var pagination = paginationFactory({\n    page: 1,\n    alwaysShowAllBtns: true,\n    showTotal: true,\n    withFirstAndLast: false,\n    sizePerPageRenderer: function sizePerPageRenderer(_ref2) {\n      var options = _ref2.options,\n          currSizePerPage = _ref2.currSizePerPage,\n          onSizePerPageChange = _ref2.onSizePerPageChange;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dataTables_length\",\n        id: \"datatable-basic_length\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, \"Show\", \" \", /*#__PURE__*/React.createElement(\"select\", {\n        name: \"datatable-basic_length\",\n        \"aria-controls\": \"datatable-basic\",\n        className: \"form-control form-control-sm\",\n        onChange: function onChange(e) {\n          return onSizePerPageChange(e.target.value);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"10\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, \"10\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"25\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, \"25\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"50\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, \"50\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"100\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, \"100\")), \" \", \"entries.\"));\n    }\n  });\n  var SearchBar = Search.SearchBar;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"mt--7\",\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Client tables\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: toggleModal,\n    style: {\n      float: \"right\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Ajouter Client\")), /*#__PURE__*/React.createElement(ToolkitProvider, {\n    keyField: \"name\",\n    data: clients,\n    columns: [{\n      dataField: \"name\",\n      text: \"Name\",\n      sort: true\n    }, {\n      dataField: \"email\",\n      text: \"Email\",\n      sort: true\n    }, {\n      dataField: \"phone\",\n      text: \"Phone\",\n      sort: true\n    }, {\n      dataField: \"position\",\n      text: \"Position\",\n      sort: true\n    }, {\n      dataField: \"office\",\n      text: \"Office\",\n      sort: true\n    }, {\n      dataField: \"age\",\n      text: \"Age\",\n      sort: true\n    }, {\n      dataField: \"start_date\",\n      text: \"Start Date\",\n      sort: true\n    }, {\n      dataField: \"salary\",\n      text: \"Salary\",\n      sort: true\n    }],\n    search: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      className: \"mb-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"buttons-copy buttons-html5\",\n      color: \"info\",\n      size: \"sm\",\n      id: \"copy-tooltip\",\n      onClick: function onClick() {\n        return navigator.clipboard.writeText(JSON.stringify(clients));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }, \"Copy\"), /*#__PURE__*/React.createElement(ReactToPrint, {\n      trigger: function trigger() {\n        return /*#__PURE__*/React.createElement(Button, {\n          href: \"#\",\n          color: \"info\",\n          size: \"sm\",\n          className: \"buttons-print\",\n          id: \"print-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 27\n          }\n        }, \"Print\");\n      },\n      content: function content() {\n        return componentRef.current;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({\n      ref: componentRef\n    }, props.baseProps, {\n      bootstrap4: true,\n      pagination: pagination,\n      bordered: false,\n      id: \"react-bs-table\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    })));\n  }))))), /*#__PURE__*/React.createElement(AddClientModal, {\n    isOpen: modal,\n    toggle: toggleModal,\n    onSave: addNewClient,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s2(Tables, \"eReoekqkxV+231KXLaz5sl2X4/s=\");\n\n_c2 = Tables;\nexport default Tables;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddClientModal\");\n$RefreshReg$(_c2, \"Tables\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/src/views/examples/Clients.js"],"names":["React","useState","useRef","Button","ButtonGroup","Card","Col","CardHeader","CardFooter","Container","FormGroup","Input","Label","Modal","ModalBody","ModalFooter","ModalHeader","Pagination","PaginationItem","PaginationLink","Row","UncontrolledTooltip","ReactToPrint","BootstrapTable","paginationFactory","ToolkitProvider","Search","ReactBSAlert","Header","dataTable","AddClientModal","isOpen","toggle","onSave","name","email","phone","client","setClient","handleInputChange","e","target","value","handleSubmit","Tables","modal","setModal","toggleModal","clients","setClients","componentRef","addNewClient","position","office","age","start_date","salary","copyToClipboardAsTable","navigator","clipboard","writeText","JSON","stringify","then","alert","catch","err","pagination","page","alwaysShowAllBtns","showTotal","withFirstAndLast","sizePerPageRenderer","options","currSizePerPage","onSizePerPageChange","SearchBar","float","dataField","text","sort","props","current","baseProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Col,\r\n  CardHeader,\r\n  CardFooter,\r\n  Container,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Row,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport ReactBSAlert from \"react-bootstrap-sweetalert\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport { dataTable } from \"variables/general\";\r\n\r\nconst AddClientModal = ({ isOpen, toggle, onSave }) => {\r\n  const [client, setClient] = useState({ name: \"\", email: \"\", phone: \"\" });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setClient({ ...client, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    onSave(client);\r\n    toggle();\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={toggle}>\r\n      <ModalHeader toggle={toggle}>Ajouter un nouveau client</ModalHeader>\r\n      <ModalBody>\r\n        <FormGroup>\r\n          <Label for=\"clientName\">Nom</Label>\r\n          <Input type=\"text\" name=\"name\" id=\"clientName\" placeholder=\"Nom du client\" value={client.name} onChange={handleInputChange} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"clientEmail\">Email</Label>\r\n          <Input type=\"email\" name=\"email\" id=\"clientEmail\" placeholder=\"Email du client\" value={client.email} onChange={handleInputChange} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"clientPhone\">Téléphone</Label>\r\n          <Input type=\"text\" name=\"phone\" id=\"clientPhone\" placeholder=\"Téléphone du client\" value={client.phone} onChange={handleInputChange} />\r\n        </FormGroup>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color=\"primary\" onClick={handleSubmit}>Enregistrer</Button>\r\n        <Button color=\"secondary\" onClick={toggle}>Annuler</Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst Tables = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const toggleModal = () => setModal(!modal);\r\n  const [clients, setClients] = useState(dataTable);\r\n  const componentRef = useRef(null);\r\n\r\n  const addNewClient = (client) => {\r\n    setClients([...clients, { ...client, position: \"New Position\", office: \"New Office\", age: \"N/A\", start_date: \"N/A\", salary: \"N/A\" }]);\r\n  };\r\n\r\n  const copyToClipboardAsTable = () => {\r\n    navigator.clipboard.writeText(JSON.stringify(clients))\r\n      .then(() => {\r\n        alert('Copied to clipboard successfully!');\r\n      })\r\n      .catch(err => {\r\n        alert('Failed to copy: ', err);\r\n      });\r\n  };\r\n\r\n  const pagination = paginationFactory({\r\n    page: 1,\r\n    alwaysShowAllBtns: true,\r\n    showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPageRenderer: ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          Show{\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={e => onSizePerPageChange(e.target.value)}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n          }{\" \"}\r\n          entries.\r\n        </label>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  const { SearchBar } = Search;\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <h3 className=\"mb-0\">Client tables</h3>\r\n                <Button color=\"primary\" onClick={toggleModal} style={{ float: \"right\" }}>Ajouter Client</Button>\r\n              </CardHeader>\r\n                <ToolkitProvider\r\n                  keyField=\"name\"\r\n                  data={clients}\r\n                  columns={[\r\n                    { dataField: \"name\", text: \"Name\", sort: true },\r\n                    { dataField: \"email\", text: \"Email\", sort: true },\r\n                    { dataField: \"phone\", text: \"Phone\", sort: true },\r\n                    { dataField: \"position\", text: \"Position\", sort: true },\r\n                    { dataField: \"office\", text: \"Office\", sort: true },\r\n                    { dataField: \"age\", text: \"Age\", sort: true },\r\n                    { dataField: \"start_date\", text: \"Start Date\", sort: true },\r\n                    { dataField: \"salary\", text: \"Salary\", sort: true }\r\n                  ]}\r\n                  search\r\n                >\r\n                 {props => (\r\n                  <div>\r\n                    <ButtonGroup className=\"mb-3\">\r\n                      <Button\r\n                        className=\"buttons-copy buttons-html5\"\r\n                        color=\"info\"\r\n                        size=\"sm\"\r\n                        id=\"copy-tooltip\"\r\n                        onClick={() => navigator.clipboard.writeText(JSON.stringify(clients))}\r\n                      >\r\n                        Copy\r\n                      </Button>\r\n                      <ReactToPrint\r\n                        trigger={() => (\r\n                          <Button\r\n                            href=\"#\"\r\n                            color=\"info\"\r\n                            size=\"sm\"\r\n                            className=\"buttons-print\"\r\n                            id=\"print-tooltip\"\r\n                          >\r\n                            Print\r\n                          </Button>\r\n                        )}\r\n                        content={() => componentRef.current}\r\n                      />\r\n                    </ButtonGroup>\r\n                    <BootstrapTable\r\n                      ref={componentRef}\r\n                      {...props.baseProps}\r\n                      bootstrap4={true}\r\n                      pagination={pagination}\r\n                      bordered={false}\r\n                      id=\"react-bs-table\"\r\n                    />\r\n                  </div>\r\n                )}\r\n                </ToolkitProvider>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n      <AddClientModal isOpen={modal} toggle={toggleModal} onSave={addNewClient} />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}