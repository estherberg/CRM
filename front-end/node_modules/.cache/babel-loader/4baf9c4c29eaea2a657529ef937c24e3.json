{"ast":null,"code":"import _slicedToArray from \"C:/Users/esthe/OneDrive/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\esthe\\\\OneDrive\\\\Desktop\\\\Projet Code\\\\Ouieqare-MERN - Copie\\\\front-end\\\\src\\\\views\\\\examples\\\\Corbeille.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, CardHeader, CardBody, Container, Row, ToastContainer, toast } from 'reactstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport { useHistory } from \"react-router-dom\";\n\nvar Corbeille = function Corbeille() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      clients = _useState2[0],\n      setClients = _useState2[1];\n\n  var history = useHistory();\n  useEffect(function () {\n    fetchDeletedClients();\n  }, []);\n\n  var fetchDeletedClients = function fetchDeletedClients() {// Ajoutez votre code pour récupérer les clients supprimés ici, similaire à fetchClients dans la page des clients\n  }; // Définition des colonnes du tableau\n\n\n  var columns = [{\n    dataField: \"nom\",\n    text: \"Nom\"\n  }, {\n    dataField: \"prenom\",\n    text: \"Prénom\"\n  }, {\n    dataField: \"email\",\n    text: \"Email\"\n  }, {\n    dataField: \"actions\",\n    text: \"Actions\",\n    formatter: function formatter(cellContent, row) {\n      return /*#__PURE__*/React.createElement(Button, {\n        color: \"success\",\n        size: \"sm\",\n        onClick: function onClick() {\n          return restoreClient(row._id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, \"Restaurer\");\n    }\n  }];\n\n  var restoreClient = function restoreClient(clientId) {// Ajoutez votre code pour restaurer un client ici\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"mt--7\",\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"Corbeille\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ToolkitProvider, {\n    keyField: \"id\",\n    data: clients,\n    columns: columns,\n    search: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, props.searchProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n      bootstrap4: true,\n      pagination: paginationFactory(),\n      noDataIndication: \"Aucun client supprim\\xE9 trouv\\xE9\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }\n    })));\n  }))))));\n};\n\n_s(Corbeille, \"3gJeX2i72KmJU5xvQ1V3VkT4eSk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Corbeille;\nexport default Corbeille;\n\nvar _c;\n\n$RefreshReg$(_c, \"Corbeille\");","map":{"version":3,"sources":["C:/Users/esthe/OneDrive/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/src/views/examples/Corbeille.js"],"names":["React","useState","useEffect","Button","Card","CardHeader","CardBody","Container","Row","ToastContainer","toast","BootstrapTable","paginationFactory","ToolkitProvider","Search","useHistory","Corbeille","clients","setClients","history","fetchDeletedClients","columns","dataField","text","formatter","cellContent","row","restoreClient","_id","clientId","props","searchProps","baseProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Card, CardHeader, CardBody, Container, Row, ToastContainer, toast } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Corbeille = () => {\r\n  const [clients, setClients] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchDeletedClients();\r\n  }, []);\r\n\r\n  const fetchDeletedClients = () => {\r\n    // Ajoutez votre code pour récupérer les clients supprimés ici, similaire à fetchClients dans la page des clients\r\n  };\r\n\r\n  // Définition des colonnes du tableau\r\n  const columns = [\r\n    { dataField: \"nom\", text: \"Nom\" },\r\n    { dataField: \"prenom\", text: \"Prénom\" },\r\n    { dataField: \"email\", text: \"Email\" },\r\n    {\r\n      dataField: \"actions\",\r\n      text: \"Actions\",\r\n      formatter: (cellContent, row) => {\r\n        return (\r\n          <Button color=\"success\" size=\"sm\" onClick={() => restoreClient(row._id)}>\r\n            Restaurer\r\n          </Button>\r\n        );\r\n      }\r\n    }\r\n  ];\r\n\r\n  const restoreClient = (clientId) => {\r\n    // Ajoutez votre code pour restaurer un client ici\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt--7\" fluid>\r\n      <Row>\r\n        <div className=\"col\">\r\n          <Card className=\"shadow\">\r\n            <CardHeader className=\"border-0\">\r\n              <h3 className=\"mb-0\">Corbeille</h3>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <ToolkitProvider\r\n                keyField=\"id\"\r\n                data={clients}\r\n                columns={columns}\r\n                search\r\n              >\r\n                {\r\n                  props => (\r\n                    <div>\r\n                      <SearchBar {...props.searchProps} />\r\n                      <BootstrapTable\r\n                        {...props.baseProps}\r\n                        bootstrap4\r\n                        pagination={paginationFactory()}\r\n                        noDataIndication=\"Aucun client supprimé trouvé\"\r\n                      />\r\n                    </div>\r\n                  )\r\n                }\r\n              </ToolkitProvider>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Corbeille;\r\n"]},"metadata":{},"sourceType":"module"}