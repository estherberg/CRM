{"ast":null,"code":"import _toConsumableArray from \"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Projet Code\\\\Ouieqare-MERN - Copie\\\\front-end\\\\src\\\\views\\\\examples\\\\Clients.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Button, ButtonGroup, Card, Col, CardHeader, CardFooter, Container, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Pagination, PaginationItem, PaginationLink, Row, UncontrolledTooltip } from \"reactstrap\";\nimport ReactToPrint from \"react-to-print\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport ReactBSAlert from \"react-bootstrap-sweetalert\";\nimport Header from \"components/Headers/Header.js\";\nimport { dataTable } from \"variables/general\";\n\nvar AddClientPage = function AddClientPage(_ref) {\n  _s();\n\n  var isOpen = _ref.isOpen,\n      onClose = _ref.onClose,\n      onSave = _ref.onSave;\n\n  var _useState = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      client = _useState2[0],\n      setClient = _useState2[1];\n\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setClient(_objectSpread(_objectSpread({}, client), {}, {\n      [name]: value\n    }));\n  };\n\n  var handleSubmit = function handleSubmit() {\n    onSave(client);\n    onClose();\n  };\n\n  if (!isOpen) return null;\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"8\",\n    className: \"m-auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Ajouter un nouveau client\"), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"clientName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, \"Nom\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"name\",\n    id: \"clientName\",\n    placeholder: \"Nom du client\",\n    value: client.name,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"clientEmail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"clientEmail\",\n    placeholder: \"Email du client\",\n    value: client.email,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"clientPhone\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, \"T\\xE9l\\xE9phone\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"phone\",\n    id: \"clientPhone\",\n    placeholder: \"T\\xE9l\\xE9phone du client\",\n    value: client.phone,\n    onChange: handleInputChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(CardFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Enregistrer\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Annuler\"))))));\n}; // const AddClientModal = ({ isOpen, toggle, onSave }) => {\n//   const [client, setClient] = useState({ name: \"\", email: \"\", phone: \"\" });\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setClient({ ...client, [name]: value });\n//   };\n//   const handleSubmit = () => {\n//     onSave(client);\n//     toggle();\n//   };\n//   return (\n//     <Modal isOpen={isOpen} toggle={toggle}>\n//       <ModalHeader toggle={toggle}>Ajouter un nouveau client</ModalHeader>\n//       <ModalBody>\n//         <FormGroup>\n//           <Label for=\"clientName\">Nom</Label>\n//           <Input type=\"text\" name=\"name\" id=\"clientName\" placeholder=\"Nom du client\" value={client.name} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"clientEmail\">Email</Label>\n//           <Input type=\"email\" name=\"email\" id=\"clientEmail\" placeholder=\"Email du client\" value={client.email} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"clientPhone\">Téléphone</Label>\n//           <Input type=\"text\" name=\"phone\" id=\"clientPhone\" placeholder=\"Téléphone du client\" value={client.phone} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"birthDate\">Date de naissance</Label>\n//           <Input type=\"date\" name=\"birthDate\" id=\"birthDate\" value={client.birthDate} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"secuNumber\">Numéro de sécurité sociale</Label>\n//           <Input type=\"text\" name=\"secuNumber\" id=\"secuNumber\" placeholder=\"Numéro de sécurité sociale\" value={client.secuNumber} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"insurance\">Mutuelle</Label>\n//           <Input type=\"text\" name=\"insurance\" id=\"insurance\" placeholder=\"Mutuelle\" value={client.insurance} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"lastFittingDate\">Date dernier appareillage</Label>\n//           <Input type=\"date\" name=\"lastFittingDate\" id=\"lastFittingDate\" value={client.lastFittingDate} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"appointmentDate\">Date du RDV</Label>\n//           <Input type=\"date\" name=\"appointmentDate\" id=\"appointmentDate\" value={client.appointmentDate} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"appointmentTime\">Heure du RDV</Label>\n//           <Input type=\"time\" name=\"appointmentTime\" id=\"appointmentTime\" value={client.appointmentTime} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"status\">Statut</Label>\n//           <Input type=\"select\" name=\"status\" id=\"status\" value={client.status} onChange={handleInputChange}>\n//             <option>Actif</option>\n//             <option>Inactif</option>\n//           </Input>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"hearingTest\">Bilan auditif</Label>\n//           <Input type=\"textarea\" name=\"hearingTest\" id=\"hearingTest\" placeholder=\"Bilan auditif\" value={client.hearingTest} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"address\">Adresse</Label>\n//           <Input type=\"text\" name=\"address\" id=\"address\" placeholder=\"Adresse\" value={client.address} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"landlinePhone\">Tél fixe</Label>\n//           <Input type=\"text\" name=\"landlinePhone\" id=\"landlinePhone\" placeholder=\"Téléphone fixe\" value={client.landlinePhone} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"mobilePhone\">Portable</Label>\n//           <Input type=\"text\" name=\"mobilePhone\" id=\"mobilePhone\" placeholder=\"Téléphone portable\" value={client.mobilePhone} onChange={handleInputChange} />\n//         </FormGroup>\n//       </ModalBody>\n//       <ModalFooter>\n//         <Button color=\"primary\" onClick={handleSubmit}>Enregistrer</Button>\n//         <Button color=\"secondary\" onClick={toggle}>Annuler</Button>\n//       </ModalFooter>\n//     </Modal>\n//   );\n// };\n\n\n_s(AddClientPage, \"M3HsheFLjc6lpa7NdAt/HTB5Fyc=\");\n\n_c = AddClientPage;\n\nvar Tables = function Tables() {\n  _s2();\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modal = _useState4[0],\n      setModal = _useState4[1];\n\n  var toggleModal = function toggleModal() {\n    return setModal(!modal);\n  };\n\n  var _useState5 = useState(dataTable),\n      _useState6 = _slicedToArray(_useState5, 2),\n      clients = _useState6[0],\n      setClients = _useState6[1];\n\n  var componentRef = useRef(null);\n\n  var addNewClient = function addNewClient(client) {\n    setClients([].concat(_toConsumableArray(clients), [_objectSpread(_objectSpread({}, client), {}, {\n      position: \"New Position\",\n      office: \"New Office\",\n      age: \"N/A\",\n      start_date: \"N/A\",\n      salary: \"N/A\"\n    })]));\n  };\n\n  var copyToClipboardAsTable = function copyToClipboardAsTable() {\n    navigator.clipboard.writeText(JSON.stringify(clients)).then(function () {\n      alert('Copied to clipboard successfully!');\n    }).catch(function (err) {\n      alert('Failed to copy: ', err);\n    });\n  };\n\n  var pagination = paginationFactory({\n    page: 1,\n    alwaysShowAllBtns: true,\n    //showTotal: true,\n    withFirstAndLast: false,\n    sizePerPageRenderer: function sizePerPageRenderer(_ref2) {\n      var options = _ref2.options,\n          currSizePerPage = _ref2.currSizePerPage,\n          onSizePerPageChange = _ref2.onSizePerPageChange;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dataTables_length\",\n        id: \"datatable-basic_length\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"select\", {\n        name: \"datatable-basic_length\",\n        \"aria-controls\": \"datatable-basic\",\n        className: \"form-control form-control-sm\",\n        onChange: function onChange(e) {\n          return onSizePerPageChange(e.target.value);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"10\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }\n      }, \"10\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"25\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }, \"25\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"50\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }\n      }, \"50\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"100\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }\n      }, \"100\")), \" \"));\n    }\n  });\n  var SearchBar = Search.SearchBar;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"mt--7\",\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-0 d-flex align-items-center justify-content-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, \"Clients\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: toggleModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, \"Ajouter Client\")), /*#__PURE__*/React.createElement(ToolkitProvider, {\n    data: clients,\n    keyField: \"name\",\n    columns: [{\n      dataField: \"Name\",\n      text: \"Nom\",\n      sort: true\n    }, {\n      dataField: \"Prénom\",\n      text: \"Prénom\",\n      sort: true\n    }, //{ dataField: \"Numéro Sécu\", text: \"Numéro Sécu\", sort: true },\n    {\n      dataField: \"Date\",\n      text: \"Date de Naissance\",\n      sort: true\n    }, {\n      dataField: \"email\",\n      text: \"Email\",\n      sort: true\n    }, {\n      dataField: \"phone\",\n      text: \"Téléphone\",\n      sort: true\n    }, {\n      dataField: \"position\",\n      text: \"Date de RDV\",\n      sort: true\n    }, {\n      dataField: \"office\",\n      text: \"Statut\",\n      sort: true\n    } //   { dataField: \"age\", text: \"Age\", sort: true },\n    //   { dataField: \"start_date\", text: \"Start Date\", sort: true },\n    //   { dataField: \"salary\", text: \"Salary\", sort: true }\n    ],\n    search: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      sm: 6,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"buttons-copy buttons-html5\",\n      color: \"info\",\n      size: \"sm\",\n      id: \"copy-tooltip\",\n      onClick: function onClick() {\n        return navigator.clipboard.writeText(JSON.stringify(clients));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 27\n      }\n    }, \"Copier\"), /*#__PURE__*/React.createElement(ReactToPrint, {\n      trigger: function trigger() {\n        return /*#__PURE__*/React.createElement(Button, {\n          color: \"info\",\n          size: \"sm\",\n          className: \"buttons-copy buttons-html5\",\n          id: \"print-tooltip\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 31\n          }\n        }, \"Imprimer\");\n      },\n      content: function content() {\n        return componentRef.current;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      sm: 6,\n      className: \"text-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, Object.assign({\n      className: \"form-control-sm\",\n      placeholder: \"Rechercher\"\n    }, props.searchProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({\n      ref: componentRef\n    }, props.baseProps, {\n      bootstrap4: true,\n      pagination: pagination,\n      bordered: false,\n      id: \"react-bs-table\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    })));\n  }))))), /*#__PURE__*/React.createElement(AddClientModal, {\n    isOpen: modal,\n    toggle: toggleModal,\n    onSave: addNewClient,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s2(Tables, \"eReoekqkxV+231KXLaz5sl2X4/s=\");\n\n_c2 = Tables;\nexport default Tables;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddClientPage\");\n$RefreshReg$(_c2, \"Tables\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/src/views/examples/Clients.js"],"names":["React","useState","useRef","Button","ButtonGroup","Card","Col","CardHeader","CardFooter","Container","FormGroup","Input","Label","Modal","ModalBody","ModalFooter","ModalHeader","Pagination","PaginationItem","PaginationLink","Row","UncontrolledTooltip","ReactToPrint","BootstrapTable","paginationFactory","ToolkitProvider","Search","ReactBSAlert","Header","dataTable","AddClientPage","isOpen","onClose","onSave","name","email","phone","client","setClient","handleInputChange","e","target","value","handleSubmit","Tables","modal","setModal","toggleModal","clients","setClients","componentRef","addNewClient","position","office","age","start_date","salary","copyToClipboardAsTable","navigator","clipboard","writeText","JSON","stringify","then","alert","catch","err","pagination","page","alwaysShowAllBtns","withFirstAndLast","sizePerPageRenderer","options","currSizePerPage","onSizePerPageChange","SearchBar","dataField","text","sort","props","current","searchProps","baseProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Col,\r\n  CardHeader,\r\n  CardFooter,\r\n  Container,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Row,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport ReactBSAlert from \"react-bootstrap-sweetalert\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport { dataTable } from \"variables/general\";\r\n\r\nconst AddClientPage = ({ isOpen, onClose, onSave }) => {\r\n    const [client, setClient] = useState({ name: \"\", email: \"\", phone: \"\" });\r\n  \r\n    const handleInputChange = (e) => {\r\n      const { name, value } = e.target;\r\n      setClient({ ...client, [name]: value });\r\n    };\r\n  \r\n    const handleSubmit = () => {\r\n      onSave(client);\r\n      onClose();\r\n    };\r\n  \r\n    if (!isOpen) return null;\r\n  \r\n    return (\r\n      <Container className=\"mt-5\">\r\n        <Row>\r\n          <Col md=\"8\" className=\"m-auto\">\r\n            <Card>\r\n              <CardHeader>Ajouter un nouveau client</CardHeader>\r\n              <CardBody>\r\n                <FormGroup>\r\n                  <Label for=\"clientName\">Nom</Label>\r\n                  <Input type=\"text\" name=\"name\" id=\"clientName\" placeholder=\"Nom du client\" value={client.name} onChange={handleInputChange} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"clientEmail\">Email</Label>\r\n                  <Input type=\"email\" name=\"email\" id=\"clientEmail\" placeholder=\"Email du client\" value={client.email} onChange={handleInputChange} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label for=\"clientPhone\">Téléphone</Label>\r\n                  <Input type=\"text\" name=\"phone\" id=\"clientPhone\" placeholder=\"Téléphone du client\" value={client.phone} onChange={handleInputChange} />\r\n                </FormGroup>\r\n                {/* Ajoutez ici les autres champs comme montré précédemment */}\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button color=\"primary\" onClick={handleSubmit}>Enregistrer</Button>\r\n                <Button color=\"secondary\" onClick={onClose}>Annuler</Button>\r\n              </CardFooter>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  };\r\n  \r\n// const AddClientModal = ({ isOpen, toggle, onSave }) => {\r\n//   const [client, setClient] = useState({ name: \"\", email: \"\", phone: \"\" });\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setClient({ ...client, [name]: value });\r\n//   };\r\n\r\n//   const handleSubmit = () => {\r\n//     onSave(client);\r\n//     toggle();\r\n//   };\r\n\r\n//   return (\r\n//     <Modal isOpen={isOpen} toggle={toggle}>\r\n//       <ModalHeader toggle={toggle}>Ajouter un nouveau client</ModalHeader>\r\n//       <ModalBody>\r\n//         <FormGroup>\r\n//           <Label for=\"clientName\">Nom</Label>\r\n//           <Input type=\"text\" name=\"name\" id=\"clientName\" placeholder=\"Nom du client\" value={client.name} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"clientEmail\">Email</Label>\r\n//           <Input type=\"email\" name=\"email\" id=\"clientEmail\" placeholder=\"Email du client\" value={client.email} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"clientPhone\">Téléphone</Label>\r\n//           <Input type=\"text\" name=\"phone\" id=\"clientPhone\" placeholder=\"Téléphone du client\" value={client.phone} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"birthDate\">Date de naissance</Label>\r\n//           <Input type=\"date\" name=\"birthDate\" id=\"birthDate\" value={client.birthDate} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"secuNumber\">Numéro de sécurité sociale</Label>\r\n//           <Input type=\"text\" name=\"secuNumber\" id=\"secuNumber\" placeholder=\"Numéro de sécurité sociale\" value={client.secuNumber} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"insurance\">Mutuelle</Label>\r\n//           <Input type=\"text\" name=\"insurance\" id=\"insurance\" placeholder=\"Mutuelle\" value={client.insurance} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"lastFittingDate\">Date dernier appareillage</Label>\r\n//           <Input type=\"date\" name=\"lastFittingDate\" id=\"lastFittingDate\" value={client.lastFittingDate} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"appointmentDate\">Date du RDV</Label>\r\n//           <Input type=\"date\" name=\"appointmentDate\" id=\"appointmentDate\" value={client.appointmentDate} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"appointmentTime\">Heure du RDV</Label>\r\n//           <Input type=\"time\" name=\"appointmentTime\" id=\"appointmentTime\" value={client.appointmentTime} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"status\">Statut</Label>\r\n//           <Input type=\"select\" name=\"status\" id=\"status\" value={client.status} onChange={handleInputChange}>\r\n//             <option>Actif</option>\r\n//             <option>Inactif</option>\r\n//           </Input>\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"hearingTest\">Bilan auditif</Label>\r\n//           <Input type=\"textarea\" name=\"hearingTest\" id=\"hearingTest\" placeholder=\"Bilan auditif\" value={client.hearingTest} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"address\">Adresse</Label>\r\n//           <Input type=\"text\" name=\"address\" id=\"address\" placeholder=\"Adresse\" value={client.address} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"landlinePhone\">Tél fixe</Label>\r\n//           <Input type=\"text\" name=\"landlinePhone\" id=\"landlinePhone\" placeholder=\"Téléphone fixe\" value={client.landlinePhone} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"mobilePhone\">Portable</Label>\r\n//           <Input type=\"text\" name=\"mobilePhone\" id=\"mobilePhone\" placeholder=\"Téléphone portable\" value={client.mobilePhone} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//       </ModalBody>\r\n//       <ModalFooter>\r\n//         <Button color=\"primary\" onClick={handleSubmit}>Enregistrer</Button>\r\n//         <Button color=\"secondary\" onClick={toggle}>Annuler</Button>\r\n//       </ModalFooter>\r\n//     </Modal>\r\n//   );\r\n  \r\n// };\r\n\r\nconst Tables = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const toggleModal = () => setModal(!modal);\r\n  const [clients, setClients] = useState(dataTable);\r\n  const componentRef = useRef(null);\r\n\r\n  const addNewClient = (client) => {\r\n    setClients([...clients, { ...client, position: \"New Position\", office: \"New Office\", age: \"N/A\", start_date: \"N/A\", salary: \"N/A\" }]);\r\n  };\r\n\r\n  const copyToClipboardAsTable = () => {\r\n    navigator.clipboard.writeText(JSON.stringify(clients))\r\n      .then(() => {\r\n        alert('Copied to clipboard successfully!');\r\n      })\r\n      .catch(err => {\r\n        alert('Failed to copy: ', err);\r\n      });\r\n  };\r\n\r\n  const pagination = paginationFactory({\r\n    page: 1,\r\n    alwaysShowAllBtns: true,\r\n    //showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPageRenderer: ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          {\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={e => onSizePerPageChange(e.target.value)}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n          }{\" \"}\r\n          \r\n        </label>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  const { SearchBar } = Search;\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0 d-flex align-items-center justify-content-between\">\r\n                <h3 className=\"mb-0\">Clients</h3>\r\n                <Button color=\"primary\" onClick={toggleModal}>Ajouter Client</Button>\r\n              </CardHeader>\r\n              <ToolkitProvider\r\n                data={clients}\r\n                keyField=\"name\"\r\n                columns={[\r\n                  { dataField: \"Name\", text: \"Nom\", sort: true },\r\n                  { dataField: \"Prénom\", text: \"Prénom\", sort: true },\r\n                  //{ dataField: \"Numéro Sécu\", text: \"Numéro Sécu\", sort: true },\r\n                  { dataField: \"Date\", text: \"Date de Naissance\", sort: true },\r\n                  { dataField: \"email\", text: \"Email\", sort: true },\r\n                  { dataField: \"phone\", text: \"Téléphone\", sort: true },\r\n                  { dataField: \"position\", text: \"Date de RDV\", sort: true },\r\n                  { dataField: \"office\", text: \"Statut\", sort: true },\r\n                //   { dataField: \"age\", text: \"Age\", sort: true },\r\n                //   { dataField: \"start_date\", text: \"Start Date\", sort: true },\r\n                //   { dataField: \"salary\", text: \"Salary\", sort: true }\r\n                ]}\r\n                search\r\n              >\r\n                {props => (\r\n                  <div className=\"p-4\">\r\n                    <Row>\r\n                      <Col xs={12} sm={6}>\r\n                        <ButtonGroup>\r\n                          <Button\r\n                            className=\"buttons-copy buttons-html5\"\r\n                            color=\"info\"\r\n                            size=\"sm\"\r\n                            id=\"copy-tooltip\"\r\n                            onClick={() => navigator.clipboard.writeText(JSON.stringify(clients))}\r\n                          >\r\n                            Copier\r\n                          </Button>\r\n                          <ReactToPrint\r\n                            trigger={() => (\r\n                              <Button\r\n                                color=\"info\"\r\n                                size=\"sm\"\r\n                                className=\"buttons-copy buttons-html5\"\r\n                                id=\"print-tooltip\"\r\n                              >\r\n                                Imprimer\r\n                              </Button>\r\n                            )}\r\n                            content={() => componentRef.current}\r\n                          />\r\n                        </ButtonGroup>\r\n                      </Col>\r\n                      <Col xs={12} sm={6} className=\"text-right\">\r\n                        <SearchBar className=\"form-control-sm\" placeholder=\"Rechercher\" {...props.searchProps} />\r\n                      </Col>\r\n                    </Row>\r\n                    <BootstrapTable\r\n                      ref={componentRef}\r\n                      {...props.baseProps}\r\n                      bootstrap4={true}\r\n                      pagination={pagination}\r\n                      bordered={false}\r\n                      id=\"react-bs-table\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              </ToolkitProvider>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n      <AddClientModal isOpen={modal} toggle={toggleModal} onSave={addNewClient} />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}