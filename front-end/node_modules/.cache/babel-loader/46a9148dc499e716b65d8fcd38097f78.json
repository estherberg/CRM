{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/esthe/OneDrive/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/esthe/OneDrive/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/esthe/OneDrive/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\esthe\\\\OneDrive\\\\Desktop\\\\Projet Code\\\\Ouieqare-MERN - Copie\\\\front-end\\\\src\\\\views\\\\examples\\\\ClientStatusPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Container, Row, Card, CardHeader, CardBody } from \"reactstrap\";\nimport Header from \"components/Headers/Header.js\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min\";\nimport axios from 'axios';\n\nvar ClientStatusPage = function ClientStatusPage(_ref) {\n  _s();\n\n  var match = _ref.match;\n  var status = match.params.statut.status; // Récupérer le statut de l'URL\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      clients = _useState2[0],\n      setClients = _useState2[1]; // État pour stocker les clients\n\n\n  var history = useHistory();\n  var totalClients = clients.length; // Nombre total de clients affichés\n\n  useEffect(function () {\n    var fetchClientsByStatus = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"http://localhost:5100/api/clients/by-status/\".concat(status), {\n                  headers: {\n                    'Authorization': \"Bearer \".concat(localStorage.getItem('token').trim().replace('JWT ', ''))\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n                setClients(response.data);\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.error('Error fetching clients:', _context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function fetchClientsByStatus() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchClientsByStatus();\n  }, [status]);\n  var columns = [{\n    dataField: \"_id\",\n    text: \"ID\",\n    hidden: true\n  }, {\n    dataField: \"nom\",\n    text: \"Nom\",\n    sort: true\n  }, // Permet le tri sur la colonne \"Nom\"\n  {\n    dataField: \"prenom\",\n    text: \"Prénom\",\n    sort: true\n  }, // Permet le tri sur la colonne \"Prénom\"\n  {\n    dataField: \"email\",\n    text: \"Email\",\n    sort: true\n  }, // Permet le tri sur la colonne \"Email\"\n  {\n    dataField: \"telephonePortable\",\n    text: \"Téléphone Portable\",\n    sort: true\n  }, // Permet le tri sur la colonne \"Téléphone Portable\"\n  {\n    dataField: \"ville\",\n    text: \"Ville\",\n    sort: true\n  }, // Permet le tri sur la colonne \"Ville\"\n  {\n    dataField: \"dateNaissance\",\n    text: \"Date de Naissance\",\n    formatter: function formatter(cellContent, row) {\n      return formatDate(row.dateNaissance);\n    },\n    sort: true // Permet le tri sur la colonne \"Date de Naissance\"\n\n  }, {\n    dataField: \"statut\",\n    text: \"Statut\",\n    formatter: function formatter(cell, row) {\n      return /*#__PURE__*/React.createElement(\"select\", {\n        defaultValue: row.statut,\n        onClick: function onClick(e) {\n          return e.stopPropagation();\n        },\n        onChange: function onChange(e) {\n          return handleStatusChange(row._id, e.target.value);\n        },\n        className: \"form-control\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Rdv fix\\xE9\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, \"Rdv fix\\xE9\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Rdv Annul\\xE9\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, \"Rdv Annul\\xE9\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Appareill\\xE9\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, \"Appareill\\xE9\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"P\\xE9riode d'essai\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, \"P\\xE9riode d'essai\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Factur\\xE9\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, \"Factur\\xE9\"));\n    },\n    editor: {\n      type: 'select',\n      options: [{\n        value: 'Rdv fixé',\n        label: 'Rdv fixé'\n      }, {\n        value: 'Rdv Annulé',\n        label: 'Rdv Annulé'\n      }, {\n        value: 'Appareillé',\n        label: 'Appareillé'\n      }, {\n        value: \"Période d'essai\",\n        label: \"Période d'essai\"\n      }, {\n        value: 'Facturé',\n        label: 'Facturé'\n      }]\n    }\n  }, {\n    dataField: 'actions',\n    text: 'Actions',\n    formatter: function formatter(cell, row) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, ' ');\n    }\n  }];\n  var tablePagination = paginationFactory({\n    page: 1,\n    sizePerPage: 10,\n    lastPageText: '>>',\n    firstPageText: '<<',\n    nextPageText: '>',\n    prePageText: '<',\n    showTotal: true,\n    alwaysShowAllBtns: true,\n    onPageChange: function onPageChange(page, sizePerPage) {\n      console.log('page', page);\n      console.log('sizePerPage', sizePerPage);\n    },\n    onSizePerPageChange: function onSizePerPageChange(page, sizePerPage) {\n      console.log('page', page);\n      console.log('sizePerPage', sizePerPage);\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"mt--7\",\n    fluid: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Clients avec le statut: \", status)), /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ToolkitProvider, {\n    keyField: \"id\",\n    data: clients,\n    columns: columns,\n    search: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, function (props) {\n    return /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n      pagination: tablePagination,\n      bordered: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }));\n  })))))));\n};\n\n_s(ClientStatusPage, \"3gJeX2i72KmJU5xvQ1V3VkT4eSk=\", false, function () {\n  return [useHistory];\n});\n\n_c = ClientStatusPage;\nexport default ClientStatusPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientStatusPage\");","map":{"version":3,"sources":["C:/Users/esthe/OneDrive/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/src/views/examples/ClientStatusPage.js"],"names":["React","useState","useEffect","useParams","useHistory","Container","Row","Card","CardHeader","CardBody","Header","BootstrapTable","paginationFactory","ToolkitProvider","axios","ClientStatusPage","match","status","params","statut","clients","setClients","history","totalClients","length","fetchClientsByStatus","get","headers","localStorage","getItem","trim","replace","response","data","console","error","columns","dataField","text","hidden","sort","formatter","cellContent","row","formatDate","dateNaissance","cell","e","stopPropagation","handleStatusChange","_id","target","value","editor","type","options","label","tablePagination","page","sizePerPage","lastPageText","firstPageText","nextPageText","prePageText","showTotal","alwaysShowAllBtns","onPageChange","log","onSizePerPageChange","props","baseProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Container, Row, Card, CardHeader, CardBody } from \"reactstrap\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider from \"react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min\";\r\nimport axios from 'axios';\r\n\r\nconst ClientStatusPage = ({ match }) => {\r\n  const { status } = match.params.statut; // Récupérer le statut de l'URL\r\n  const [clients, setClients] = useState([]); // État pour stocker les clients\r\n  const history = useHistory();\r\n  const totalClients = clients.length; // Nombre total de clients affichés\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchClientsByStatus = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5100/api/clients/by-status/${status}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token').trim().replace('JWT ', '')}`\r\n          }\r\n        });\r\n        setClients(response.data);\r\n      } catch (err) {\r\n        console.error('Error fetching clients:', err);\r\n      }\r\n    };\r\n\r\n    fetchClientsByStatus();\r\n  }, [status]);\r\n\r\n const columns = [\r\n    { dataField: \"_id\", text: \"ID\", hidden: true },\r\n    { dataField: \"nom\", text: \"Nom\", sort: true },  // Permet le tri sur la colonne \"Nom\"\r\n    { dataField: \"prenom\", text: \"Prénom\", sort: true },  // Permet le tri sur la colonne \"Prénom\"\r\n    { dataField: \"email\", text: \"Email\", sort: true },  // Permet le tri sur la colonne \"Email\"\r\n    { dataField: \"telephonePortable\", text: \"Téléphone Portable\", sort: true },  // Permet le tri sur la colonne \"Téléphone Portable\"\r\n    { dataField: \"ville\", text: \"Ville\", sort: true },  // Permet le tri sur la colonne \"Ville\"\r\n    {\r\n      dataField: \"dateNaissance\",\r\n      text: \"Date de Naissance\",\r\n      formatter: (cellContent, row) => formatDate(row.dateNaissance),\r\n      sort: true  // Permet le tri sur la colonne \"Date de Naissance\"\r\n    },\r\n    {\r\n      dataField: \"statut\",\r\n      text: \"Statut\",\r\n      formatter: (cell, row) => {\r\n        return (\r\n          <select\r\n            defaultValue={row.statut}\r\n            onClick={(e) => e.stopPropagation()} \r\n            onChange={(e) => handleStatusChange(row._id, e.target.value)}\r\n            className=\"form-control\"\r\n          >\r\n            <option value=\"Rdv fixé\">Rdv fixé</option>\r\n            <option value=\"Rdv Annulé\">Rdv Annulé</option>\r\n            <option value=\"Appareillé\">Appareillé</option>\r\n            <option value=\"Période d'essai\">Période d'essai</option>\r\n            <option value=\"Facturé\">Facturé</option>\r\n          </select>\r\n        );\r\n      },\r\n      editor: {\r\n        type: 'select',\r\n        options: [\r\n          { value: 'Rdv fixé', label: 'Rdv fixé' },\r\n          { value: 'Rdv Annulé', label: 'Rdv Annulé' },\r\n          { value: 'Appareillé', label: 'Appareillé' },\r\n          { value: \"Période d'essai\", label: \"Période d'essai\" },\r\n          { value: 'Facturé', label: 'Facturé' }\r\n        ]\r\n      }\r\n    },\r\n    {\r\n      dataField: 'actions',\r\n      text: 'Actions',\r\n      formatter: (cell, row) => (\r\n        <div>\r\n          {/* <Button color=\"primary\" size=\"sm\" onClick={() => handleEditClient(row)}>\r\n            <i className=\"fas fa-pencil-alt\" />\r\n          </Button> */}\r\n          {' '}\r\n          {/* <Button color=\"danger\" size=\"sm\" onClick={() => handleDeleteClient(row._id)}>\r\n            <i className=\"fas fa-trash\" />\r\n          </Button> */}\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n  const tablePagination = paginationFactory({\r\n    page: 1,\r\n    sizePerPage: 10,\r\n    lastPageText: '>>',\r\n    firstPageText: '<<',\r\n    nextPageText: '>',\r\n    prePageText: '<',\r\n    showTotal: true,\r\n    alwaysShowAllBtns: true,\r\n    onPageChange: function (page, sizePerPage) {\r\n      console.log('page', page);\r\n      console.log('sizePerPage', sizePerPage);\r\n    },\r\n    onSizePerPageChange: function (page, sizePerPage) {\r\n      console.log('page', page);\r\n      console.log('sizePerPage', sizePerPage);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <h3 className=\"mb-0\">Clients avec le statut: {status}</h3>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <ToolkitProvider keyField=\"id\" data={clients} columns={columns} search>\r\n                  {props => (\r\n                    <BootstrapTable\r\n                      {...props.baseProps}\r\n                      pagination={tablePagination}\r\n                      bordered={false}\r\n                    />\r\n                  )}\r\n                </ToolkitProvider>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientStatusPage;\r\n"]},"metadata":{},"sourceType":"module"}