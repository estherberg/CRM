{"ast":null,"code":"import _objectSpread from\"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useHistory}from\"react-router-dom\";import React,{useState,useRef}from\"react\";import{Button,ButtonGroup,Card,Col,CardHeader,CardFooter,Container,FormGroup,Input,Label,Modal,ModalBody,ModalFooter,ModalHeader,Pagination,PaginationItem,PaginationLink,Row,UncontrolledTooltip}from\"reactstrap\";import ReactToPrint from\"react-to-print\";import BootstrapTable from\"react-bootstrap-table-next\";import paginationFactory from\"react-bootstrap-table2-paginator\";import ToolkitProvider,{Search}from\"react-bootstrap-table2-toolkit\";import ReactBSAlert from\"react-bootstrap-sweetalert\";import Header from\"components/Headers/Header.js\";import{dataTable}from\"variables/general\";// const AddClientModal = ({ isOpen, toggle, onSave }) => {\n//   const [client, setClient] = useState({ name: \"\", email: \"\", phone: \"\" });\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setClient({ ...client, [name]: value });\n//   };\n//   const handleSubmit = () => {\n//     onSave(client);\n//     toggle();\n//   };\n//   return (\n//     <Modal isOpen={isOpen} toggle={toggle}>\n//       <ModalHeader toggle={toggle}>Ajouter un nouveau client</ModalHeader>\n//       <ModalBody>\n//         <FormGroup>\n//           <Label for=\"clientName\">Nom</Label>\n//           <Input type=\"text\" name=\"name\" id=\"clientName\" placeholder=\"Nom du client\" value={client.name} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"clientEmail\">Email</Label>\n//           <Input type=\"email\" name=\"email\" id=\"clientEmail\" placeholder=\"Email du client\" value={client.email} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"clientPhone\">Téléphone</Label>\n//           <Input type=\"text\" name=\"phone\" id=\"clientPhone\" placeholder=\"Téléphone du client\" value={client.phone} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"birthDate\">Date de naissance</Label>\n//           <Input type=\"date\" name=\"birthDate\" id=\"birthDate\" value={client.birthDate} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"secuNumber\">Numéro de sécurité sociale</Label>\n//           <Input type=\"text\" name=\"secuNumber\" id=\"secuNumber\" placeholder=\"Numéro de sécurité sociale\" value={client.secuNumber} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"insurance\">Mutuelle</Label>\n//           <Input type=\"text\" name=\"insurance\" id=\"insurance\" placeholder=\"Mutuelle\" value={client.insurance} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"lastFittingDate\">Date dernier appareillage</Label>\n//           <Input type=\"date\" name=\"lastFittingDate\" id=\"lastFittingDate\" value={client.lastFittingDate} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"appointmentDate\">Date du RDV</Label>\n//           <Input type=\"date\" name=\"appointmentDate\" id=\"appointmentDate\" value={client.appointmentDate} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"appointmentTime\">Heure du RDV</Label>\n//           <Input type=\"time\" name=\"appointmentTime\" id=\"appointmentTime\" value={client.appointmentTime} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"status\">Statut</Label>\n//           <Input type=\"select\" name=\"status\" id=\"status\" value={client.status} onChange={handleInputChange}>\n//             <option>Actif</option>\n//             <option>Inactif</option>\n//           </Input>\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"hearingTest\">Bilan auditif</Label>\n//           <Input type=\"textarea\" name=\"hearingTest\" id=\"hearingTest\" placeholder=\"Bilan auditif\" value={client.hearingTest} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"address\">Adresse</Label>\n//           <Input type=\"text\" name=\"address\" id=\"address\" placeholder=\"Adresse\" value={client.address} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"landlinePhone\">Tél fixe</Label>\n//           <Input type=\"text\" name=\"landlinePhone\" id=\"landlinePhone\" placeholder=\"Téléphone fixe\" value={client.landlinePhone} onChange={handleInputChange} />\n//         </FormGroup>\n//         <FormGroup>\n//           <Label for=\"mobilePhone\">Portable</Label>\n//           <Input type=\"text\" name=\"mobilePhone\" id=\"mobilePhone\" placeholder=\"Téléphone portable\" value={client.mobilePhone} onChange={handleInputChange} />\n//         </FormGroup>\n//       </ModalBody>\n//       <ModalFooter>\n//         <Button color=\"primary\" onClick={handleSubmit}>Enregistrer</Button>\n//         <Button color=\"secondary\" onClick={toggle}>Annuler</Button>\n//       </ModalFooter>\n//     </Modal>\n//   );\n// };\nvar Tables=function Tables(){//const [modal, setModal] = useState(false);\n//const toggleModal = () => setModal(!modal);\nvar history=useHistory();var _useState=useState(dataTable),_useState2=_slicedToArray(_useState,2),clients=_useState2[0],setClients=_useState2[1];var componentRef=useRef(null);var addNewClient=function addNewClient(client){setClients([].concat(_toConsumableArray(clients),[_objectSpread(_objectSpread({},client),{},{position:\"01/01/2025\",office:\"RDV en cours\",age:\"N/A\",start_date:\"N/A\",salary:\"N/A\"})]));};var handleAddClient=function handleAddClient(){console.log('Redirection to /admin/nouveauClient');history.push('/admin/nouveauClient');};var copyToClipboardAsTable=function copyToClipboardAsTable(){navigator.clipboard.writeText(JSON.stringify(clients)).then(function(){alert('Copied to clipboard successfully!');}).catch(function(err){alert('Failed to copy: ',err);});};var pagination=paginationFactory({page:1,alwaysShowAllBtns:true,//showTotal: true,\nwithFirstAndLast:false,sizePerPageRenderer:function sizePerPageRenderer(_ref){var options=_ref.options,currSizePerPage=_ref.currSizePerPage,onSizePerPageChange=_ref.onSizePerPageChange;return/*#__PURE__*/React.createElement(\"div\",{className:\"dataTables_length\",id:\"datatable-basic_length\"},/*#__PURE__*/React.createElement(\"label\",null,\" \",/*#__PURE__*/React.createElement(\"select\",{name:\"datatable-basic_length\",\"aria-controls\":\"datatable-basic\",className:\"form-control form-control-sm\",onChange:function onChange(e){return onSizePerPageChange(e.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"10\"},\"10\"),/*#__PURE__*/React.createElement(\"option\",{value:\"25\"},\"25\"),/*#__PURE__*/React.createElement(\"option\",{value:\"50\"},\"50\"),/*#__PURE__*/React.createElement(\"option\",{value:\"100\"},\"100\")),\" \"));}});var SearchBar=Search.SearchBar;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(Container,{className:\"mt--7\",fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow\"},/*#__PURE__*/React.createElement(CardHeader,{className:\"border-0 d-flex align-items-center justify-content-between\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"mb-0\"},\"Clients\"),/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:handleAddClient},\"Ajouter Client\")),/*#__PURE__*/React.createElement(ToolkitProvider,{data:clients,keyField:\"name\",columns:[{dataField:\"Name\",text:\"Nom\",sort:true},{dataField:\"Prénom\",text:\"Prénom\",sort:true},//{ dataField: \"Numéro Sécu\", text: \"Numéro Sécu\", sort: true },\n{dataField:\"Date\",text:\"Date de Naissance\",sort:true},{dataField:\"email\",text:\"Email\",sort:true},{dataField:\"phone\",text:\"Téléphone\",sort:true},{dataField:\"position\",text:\"Date de RDV\",sort:true},{dataField:\"office\",text:\"Statut\",sort:true}//   { dataField: \"age\", text: \"Age\", sort: true },\n//   { dataField: \"start_date\", text: \"Start Date\", sort: true },\n//   { dataField: \"salary\", text: \"Salary\", sort: true }\n],search:true},function(props){return/*#__PURE__*/React.createElement(\"div\",{className:\"p-4\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xs:12,sm:6},/*#__PURE__*/React.createElement(ButtonGroup,null,/*#__PURE__*/React.createElement(Button,{className:\"buttons-copy buttons-html5\",color:\"info\",size:\"sm\",id:\"copy-tooltip\",onClick:function onClick(){return navigator.clipboard.writeText(JSON.stringify(clients));}},\"Copier\"),/*#__PURE__*/React.createElement(ReactToPrint,{trigger:function trigger(){return/*#__PURE__*/React.createElement(Button,{color:\"info\",size:\"sm\",className:\"buttons-copy buttons-html5\",id:\"print-tooltip\"},\"Imprimer\");},content:function content(){return componentRef.current;}}))),/*#__PURE__*/React.createElement(Col,{xs:12,sm:6,className:\"text-right\"},/*#__PURE__*/React.createElement(SearchBar,Object.assign({className:\"form-control-sm\",placeholder:\"Rechercher\"},props.searchProps)))),/*#__PURE__*/React.createElement(BootstrapTable,Object.assign({ref:componentRef},props.baseProps,{bootstrap4:true,pagination:pagination,bordered:false,id:\"react-bs-table\"})));}))))));};export default Tables;","map":{"version":3,"sources":["C:/Users/user/Desktop/Projet Code/Ouieqare-MERN - Copie/front-end/src/views/examples/Clients.js"],"names":["useHistory","React","useState","useRef","Button","ButtonGroup","Card","Col","CardHeader","CardFooter","Container","FormGroup","Input","Label","Modal","ModalBody","ModalFooter","ModalHeader","Pagination","PaginationItem","PaginationLink","Row","UncontrolledTooltip","ReactToPrint","BootstrapTable","paginationFactory","ToolkitProvider","Search","ReactBSAlert","Header","dataTable","Tables","history","clients","setClients","componentRef","addNewClient","client","position","office","age","start_date","salary","handleAddClient","console","log","push","copyToClipboardAsTable","navigator","clipboard","writeText","JSON","stringify","then","alert","catch","err","pagination","page","alwaysShowAllBtns","withFirstAndLast","sizePerPageRenderer","options","currSizePerPage","onSizePerPageChange","e","target","value","SearchBar","dataField","text","sort","props","current","searchProps","baseProps"],"mappings":"+iBAAA,OAASA,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,KAAwC,OAAxC,CACA,OACEC,MADF,CAEEC,WAFF,CAGEC,IAHF,CAIEC,GAJF,CAKEC,UALF,CAMEC,UANF,CAOEC,SAPF,CAQEC,SARF,CASEC,KATF,CAUEC,KAVF,CAWEC,KAXF,CAYEC,SAZF,CAaEC,WAbF,CAcEC,WAdF,CAeEC,UAfF,CAgBEC,cAhBF,CAiBEC,cAjBF,CAkBEC,GAlBF,CAmBEC,mBAnBF,KAoBO,YApBP,CAqBA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,4BAA3B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,kCAA9B,CACA,MAAOC,CAAAA,eAAP,EAA0BC,MAA1B,KAAwC,gCAAxC,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,8BAAnB,CACA,OAASC,SAAT,KAA0B,mBAA1B,CAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB;AACA;AACA,GAAMC,CAAAA,OAAO,CAAGhC,UAAU,EAA1B,CAHmB,cAIWE,QAAQ,CAAC4B,SAAD,CAJnB,wCAIZG,OAJY,eAIHC,UAJG,eAKnB,GAAMC,CAAAA,YAAY,CAAGhC,MAAM,CAAC,IAAD,CAA3B,CAEA,GAAMiC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAAY,CAC/BH,UAAU,8BAAKD,OAAL,kCAAmBI,MAAnB,MAA2BC,QAAQ,CAAE,YAArC,CAAmDC,MAAM,CAAE,cAA3D,CAA2EC,GAAG,CAAE,KAAhF,CAAuFC,UAAU,CAAE,KAAnG,CAA0GC,MAAM,CAAE,KAAlH,KAAV,CACD,CAFD,CAGF,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BC,OAAO,CAACC,GAAR,CAAY,qCAAZ,EACEb,OAAO,CAACc,IAAR,CAAa,sBAAb,EACD,CAHH,CAKE,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,CACnCC,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BC,IAAI,CAACC,SAAL,CAAenB,OAAf,CAA9B,EACGoB,IADH,CACQ,UAAM,CACVC,KAAK,CAAC,mCAAD,CAAL,CACD,CAHH,EAIGC,KAJH,CAIS,SAAAC,GAAG,CAAI,CACZF,KAAK,CAAC,kBAAD,CAAqBE,GAArB,CAAL,CACD,CANH,EAOD,CARD,CAUA,GAAMC,CAAAA,UAAU,CAAGhC,iBAAiB,CAAC,CACnCiC,IAAI,CAAE,CAD6B,CAEnCC,iBAAiB,CAAE,IAFgB,CAGnC;AACAC,gBAAgB,CAAE,KAJiB,CAKnCC,mBAAmB,CAAE,sCAAGC,CAAAA,OAAH,MAAGA,OAAH,CAAYC,eAAZ,MAAYA,eAAZ,CAA6BC,mBAA7B,MAA6BA,mBAA7B,oBACnB,2BAAK,SAAS,CAAC,mBAAf,CAAmC,EAAE,CAAC,wBAAtC,eACE,iCACG,GADH,cAGI,8BACE,IAAI,CAAC,wBADP,CAEE,gBAAc,iBAFhB,CAGE,SAAS,CAAC,8BAHZ,CAIE,QAAQ,CAAE,kBAAAC,CAAC,QAAID,CAAAA,mBAAmB,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvB,EAJb,eAME,8BAAQ,KAAK,CAAC,IAAd,OANF,cAOE,8BAAQ,KAAK,CAAC,IAAd,OAPF,cAQE,8BAAQ,KAAK,CAAC,IAAd,OARF,cASE,8BAAQ,KAAK,CAAC,KAAd,QATF,CAHJ,CAcI,GAdJ,CADF,CADmB,EALc,CAAD,CAApC,CAzBmB,GAqDXC,CAAAA,SArDW,CAqDGzC,MArDH,CAqDXyC,SArDW,CAuDnB,mBACE,qDACE,oBAAC,MAAD,MADF,cAEE,oBAAC,SAAD,EAAW,SAAS,CAAC,OAArB,CAA6B,KAAK,KAAlC,eACE,oBAAC,GAAD,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,IAAD,EAAM,SAAS,CAAC,QAAhB,eACE,oBAAC,UAAD,EAAY,SAAS,CAAC,4DAAtB,eACE,0BAAI,SAAS,CAAC,MAAd,YADF,cAGE,oBAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,OAAO,CAAEzB,eAAjC,mBAHF,CADF,cAME,oBAAC,eAAD,EACE,IAAI,CAAEV,OADR,CAEE,QAAQ,CAAC,MAFX,CAGE,OAAO,CAAE,CACP,CAAEoC,SAAS,CAAE,MAAb,CAAqBC,IAAI,CAAE,KAA3B,CAAkCC,IAAI,CAAE,IAAxC,CADO,CAEP,CAAEF,SAAS,CAAE,QAAb,CAAuBC,IAAI,CAAE,QAA7B,CAAuCC,IAAI,CAAE,IAA7C,CAFO,CAGP;AACA,CAAEF,SAAS,CAAE,MAAb,CAAqBC,IAAI,CAAE,mBAA3B,CAAgDC,IAAI,CAAE,IAAtD,CAJO,CAKP,CAAEF,SAAS,CAAE,OAAb,CAAsBC,IAAI,CAAE,OAA5B,CAAqCC,IAAI,CAAE,IAA3C,CALO,CAMP,CAAEF,SAAS,CAAE,OAAb,CAAsBC,IAAI,CAAE,WAA5B,CAAyCC,IAAI,CAAE,IAA/C,CANO,CAOP,CAAEF,SAAS,CAAE,UAAb,CAAyBC,IAAI,CAAE,aAA/B,CAA8CC,IAAI,CAAE,IAApD,CAPO,CAQP,CAAEF,SAAS,CAAE,QAAb,CAAuBC,IAAI,CAAE,QAA7B,CAAuCC,IAAI,CAAE,IAA7C,CACF;AACA;AACA;AAXS,CAHX,CAgBE,MAAM,KAhBR,EAkBG,SAAAC,KAAK,qBACJ,2BAAK,SAAS,CAAC,KAAf,eACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAE,CAAjB,eACE,oBAAC,WAAD,mBACE,oBAAC,MAAD,EACE,SAAS,CAAC,4BADZ,CAEE,KAAK,CAAC,MAFR,CAGE,IAAI,CAAC,IAHP,CAIE,EAAE,CAAC,cAJL,CAKE,OAAO,CAAE,yBAAMxB,CAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BC,IAAI,CAACC,SAAL,CAAenB,OAAf,CAA9B,CAAN,EALX,WADF,cAUE,oBAAC,YAAD,EACE,OAAO,CAAE,sCACP,oBAAC,MAAD,EACE,KAAK,CAAC,MADR,CAEE,IAAI,CAAC,IAFP,CAGE,SAAS,CAAC,4BAHZ,CAIE,EAAE,CAAC,eAJL,aADO,EADX,CAWE,OAAO,CAAE,yBAAME,CAAAA,YAAY,CAACsC,OAAnB,EAXX,EAVF,CADF,CADF,cA2BE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,EAAE,CAAE,CAAjB,CAAoB,SAAS,CAAC,YAA9B,eACE,oBAAC,SAAD,gBAAW,SAAS,CAAC,iBAArB,CAAuC,WAAW,CAAC,YAAnD,EAAoED,KAAK,CAACE,WAA1E,EADF,CA3BF,CADF,cAgCE,oBAAC,cAAD,gBACE,GAAG,CAAEvC,YADP,EAEMqC,KAAK,CAACG,SAFZ,EAGE,UAAU,CAAE,IAHd,CAIE,UAAU,CAAElB,UAJd,CAKE,QAAQ,CAAE,KALZ,CAME,EAAE,CAAC,gBANL,GAhCF,CADI,EAlBR,CANF,CADF,CADF,CADF,CAFF,CADF,CAiFD,CAxID,CA4IA,cAAe1B,CAAAA,MAAf","sourcesContent":["import { useHistory } from \"react-router-dom\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Col,\r\n  CardHeader,\r\n  CardFooter,\r\n  Container,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Row,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport ReactBSAlert from \"react-bootstrap-sweetalert\";\r\nimport Header from \"components/Headers/Header.js\";\r\nimport { dataTable } from \"variables/general\";\r\n\r\n// const AddClientModal = ({ isOpen, toggle, onSave }) => {\r\n//   const [client, setClient] = useState({ name: \"\", email: \"\", phone: \"\" });\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setClient({ ...client, [name]: value });\r\n//   };\r\n\r\n//   const handleSubmit = () => {\r\n//     onSave(client);\r\n//     toggle();\r\n//   };\r\n\r\n//   return (\r\n//     <Modal isOpen={isOpen} toggle={toggle}>\r\n//       <ModalHeader toggle={toggle}>Ajouter un nouveau client</ModalHeader>\r\n//       <ModalBody>\r\n//         <FormGroup>\r\n//           <Label for=\"clientName\">Nom</Label>\r\n//           <Input type=\"text\" name=\"name\" id=\"clientName\" placeholder=\"Nom du client\" value={client.name} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"clientEmail\">Email</Label>\r\n//           <Input type=\"email\" name=\"email\" id=\"clientEmail\" placeholder=\"Email du client\" value={client.email} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"clientPhone\">Téléphone</Label>\r\n//           <Input type=\"text\" name=\"phone\" id=\"clientPhone\" placeholder=\"Téléphone du client\" value={client.phone} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"birthDate\">Date de naissance</Label>\r\n//           <Input type=\"date\" name=\"birthDate\" id=\"birthDate\" value={client.birthDate} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"secuNumber\">Numéro de sécurité sociale</Label>\r\n//           <Input type=\"text\" name=\"secuNumber\" id=\"secuNumber\" placeholder=\"Numéro de sécurité sociale\" value={client.secuNumber} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"insurance\">Mutuelle</Label>\r\n//           <Input type=\"text\" name=\"insurance\" id=\"insurance\" placeholder=\"Mutuelle\" value={client.insurance} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"lastFittingDate\">Date dernier appareillage</Label>\r\n//           <Input type=\"date\" name=\"lastFittingDate\" id=\"lastFittingDate\" value={client.lastFittingDate} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"appointmentDate\">Date du RDV</Label>\r\n//           <Input type=\"date\" name=\"appointmentDate\" id=\"appointmentDate\" value={client.appointmentDate} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"appointmentTime\">Heure du RDV</Label>\r\n//           <Input type=\"time\" name=\"appointmentTime\" id=\"appointmentTime\" value={client.appointmentTime} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"status\">Statut</Label>\r\n//           <Input type=\"select\" name=\"status\" id=\"status\" value={client.status} onChange={handleInputChange}>\r\n//             <option>Actif</option>\r\n//             <option>Inactif</option>\r\n//           </Input>\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"hearingTest\">Bilan auditif</Label>\r\n//           <Input type=\"textarea\" name=\"hearingTest\" id=\"hearingTest\" placeholder=\"Bilan auditif\" value={client.hearingTest} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"address\">Adresse</Label>\r\n//           <Input type=\"text\" name=\"address\" id=\"address\" placeholder=\"Adresse\" value={client.address} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"landlinePhone\">Tél fixe</Label>\r\n//           <Input type=\"text\" name=\"landlinePhone\" id=\"landlinePhone\" placeholder=\"Téléphone fixe\" value={client.landlinePhone} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//         <FormGroup>\r\n//           <Label for=\"mobilePhone\">Portable</Label>\r\n//           <Input type=\"text\" name=\"mobilePhone\" id=\"mobilePhone\" placeholder=\"Téléphone portable\" value={client.mobilePhone} onChange={handleInputChange} />\r\n//         </FormGroup>\r\n//       </ModalBody>\r\n//       <ModalFooter>\r\n//         <Button color=\"primary\" onClick={handleSubmit}>Enregistrer</Button>\r\n//         <Button color=\"secondary\" onClick={toggle}>Annuler</Button>\r\n//       </ModalFooter>\r\n//     </Modal>\r\n//   );\r\n  \r\n// };\r\n\r\nconst Tables = () => {\r\n  //const [modal, setModal] = useState(false);\r\n  //const toggleModal = () => setModal(!modal);\r\n  const history = useHistory();\r\n  const [clients, setClients] = useState(dataTable);\r\n  const componentRef = useRef(null);\r\n\r\n  const addNewClient = (client) => {\r\n    setClients([...clients, { ...client, position: \"01/01/2025\", office: \"RDV en cours\", age: \"N/A\", start_date: \"N/A\", salary: \"N/A\" }]);\r\n  };\r\nconst handleAddClient = () => {\r\n  console.log('Redirection to /admin/nouveauClient');\r\n    history.push('/admin/nouveauClient');\r\n  };\r\n\r\n  const copyToClipboardAsTable = () => {\r\n    navigator.clipboard.writeText(JSON.stringify(clients))\r\n      .then(() => {\r\n        alert('Copied to clipboard successfully!');\r\n      })\r\n      .catch(err => {\r\n        alert('Failed to copy: ', err);\r\n      });\r\n  };\r\n\r\n  const pagination = paginationFactory({\r\n    page: 1,\r\n    alwaysShowAllBtns: true,\r\n    //showTotal: true,\r\n    withFirstAndLast: false,\r\n    sizePerPageRenderer: ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n      <div className=\"dataTables_length\" id=\"datatable-basic_length\">\r\n        <label>\r\n          {\" \"}\r\n          {\r\n            <select\r\n              name=\"datatable-basic_length\"\r\n              aria-controls=\"datatable-basic\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={e => onSizePerPageChange(e.target.value)}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n          }{\" \"}\r\n          \r\n        </label>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  const { SearchBar } = Search;\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container className=\"mt--7\" fluid>\r\n        <Row>\r\n          <div className=\"col\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0 d-flex align-items-center justify-content-between\">\r\n                <h3 className=\"mb-0\">Clients</h3>\r\n                {/* <Button color=\"primary\" onClick={toggleModal}>Ajouter Client</Button> */}\r\n                <Button color=\"primary\" onClick={handleAddClient}>Ajouter Client</Button>\r\n              </CardHeader>\r\n              <ToolkitProvider\r\n                data={clients}\r\n                keyField=\"name\"\r\n                columns={[\r\n                  { dataField: \"Name\", text: \"Nom\", sort: true },\r\n                  { dataField: \"Prénom\", text: \"Prénom\", sort: true },\r\n                  //{ dataField: \"Numéro Sécu\", text: \"Numéro Sécu\", sort: true },\r\n                  { dataField: \"Date\", text: \"Date de Naissance\", sort: true },\r\n                  { dataField: \"email\", text: \"Email\", sort: true },\r\n                  { dataField: \"phone\", text: \"Téléphone\", sort: true },\r\n                  { dataField: \"position\", text: \"Date de RDV\", sort: true },\r\n                  { dataField: \"office\", text: \"Statut\", sort: true },\r\n                //   { dataField: \"age\", text: \"Age\", sort: true },\r\n                //   { dataField: \"start_date\", text: \"Start Date\", sort: true },\r\n                //   { dataField: \"salary\", text: \"Salary\", sort: true }\r\n                ]}\r\n                search\r\n              >\r\n                {props => (\r\n                  <div className=\"p-4\">\r\n                    <Row>\r\n                      <Col xs={12} sm={6}>\r\n                        <ButtonGroup>\r\n                          <Button\r\n                            className=\"buttons-copy buttons-html5\"\r\n                            color=\"info\"\r\n                            size=\"sm\"\r\n                            id=\"copy-tooltip\"\r\n                            onClick={() => navigator.clipboard.writeText(JSON.stringify(clients))}\r\n                          >\r\n                            Copier\r\n                          </Button>\r\n                          <ReactToPrint\r\n                            trigger={() => (\r\n                              <Button\r\n                                color=\"info\"\r\n                                size=\"sm\"\r\n                                className=\"buttons-copy buttons-html5\"\r\n                                id=\"print-tooltip\"\r\n                              >\r\n                                Imprimer\r\n                              </Button>\r\n                            )}\r\n                            content={() => componentRef.current}\r\n                          />\r\n                        </ButtonGroup>\r\n                      </Col>\r\n                      <Col xs={12} sm={6} className=\"text-right\">\r\n                        <SearchBar className=\"form-control-sm\" placeholder=\"Rechercher\" {...props.searchProps} />\r\n                      </Col>\r\n                    </Row>\r\n                    <BootstrapTable\r\n                      ref={componentRef}\r\n                      {...props.baseProps}\r\n                      bootstrap4={true}\r\n                      pagination={pagination}\r\n                      bordered={false}\r\n                      id=\"react-bs-table\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              </ToolkitProvider>\r\n            </Card>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n      {/* <AddClientModal isOpen={modal} toggle={toggleModal} onSave={addNewClient} /> */}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Tables;\r\n"]},"metadata":{},"sourceType":"module"}